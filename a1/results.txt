test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... FAIL
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_1 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_2 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_3 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_4 (__main__.TestPropFC) ... FAIL
test_prop_fc_0 (__main__.TestPropFC) ... FAIL
test_prop_fc_1 (__main__.TestPropFC) ... FAIL
test_prop_fc_2 (__main__.TestPropFC) ... FAIL
test_prop_fc_3 (__main__.TestPropFC) ... FAIL
test_prop_fc_4 (__main__.TestPropFC) ... FAIL
test_prop_GAC_0 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_1 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_2 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_3 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_4 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_5 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_6 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_7 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_8 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_9 (__main__.TestPropGAC) ... FAIL

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_1 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


======================================================================
FAIL: test_bin_prop_fc_0 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_bin_prop_fc_1 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_bin_prop_fc_2 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_bin_prop_fc_3 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_bin_prop_fc_4 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_fc_0 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_fc_1 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_fc_2 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_fc_3 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_fc_4 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_0 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_1 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_2 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_GAC_3 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_GAC_4 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_5 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to solve board!
(5, [(4, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (1, [(1, 5), (2, 5)], '-'), (9, [(2, 2), (2, 3)], '+'), (3, [(3, 1), (3, 2)], '-'), (6, [(3, 3), (3, 4), (4, 4)], '*'), (9, [(3, 5), (4, 5)], '+'), (7, [(4, 1), (5, 1)], '+'), (3, [(4, 2), (4, 3)], '-'), (6, [(5, 2), (5, 3)], '*'), (4, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_6 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to solve board!
(5, [(10, [(1, 1), (1, 2), (2, 1), (2, 2)], '+'), (18, [(1, 3), (1, 4), (2, 3), (2, 4), (3, 4)], '+'), (2, [(1, 5), (2, 5), (3, 5)], '-'), (1, [(3, 1), (3, 2), (3, 3)], '-'), (600, [(4, 1), (4, 2), (4, 3), (5, 1), (5, 2), (5, 3)], '*'), (2, [(4, 4), (5, 4), (5, 5)], '/'), (3, [(4, 5)], '?')])


======================================================================
FAIL: test_prop_GAC_7 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to solve board!
(5, [(2, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (1, 5)], '-'), (1, [(2, 2)], '?'), (2, [(2, 3), (2, 4)], '-'), (9, [(2, 5), (3, 5), (4, 5)], '+'), (6, [(3, 1), (3, 2)], '*'), (4, [(3, 3)], '?'), (3, [(3, 4), (4, 4)], '+'), (3, [(4, 1), (5, 1)], '-'), (15, [(4, 2), (4, 3)], '*'), (9, [(5, 2), (5, 3)], '+'), (1, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_8 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to solve board!
(6, [(11, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (1, 3)], '/'), (20, [(1, 4), (2, 4)], '*'), (6, [(1, 5), (1, 6), (2, 6), (3, 6)], '*'), (3, [(2, 2), (2, 3)], '-'), (3, [(2, 5), (3, 5)], '/'), (240, [(3, 1), (3, 2), (4, 1), (4, 2)], '*'), (6, [(3, 3), (3, 4)], '*'), (6, [(4, 3), (5, 3)], '*'), (7, [(4, 4), (5, 4), (5, 5)], '+'), (30, [(4, 5), (4, 6)], '*'), (6, [(5, 1), (5, 2)], '*'), (9, [(5, 6), (6, 6)], '+'), (8, [(6, 1), (6, 2), (6, 3)], '+'), (2, [(6, 4), (6, 5)], '/')])


======================================================================
FAIL: test_prop_GAC_9 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to solve board!
(6, [(2, [(1, 1), (1, 2), (1, 3)], '/'), (3, [(1, 4), (1, 5)], '-'), (11, [(1, 6), (2, 6), (3, 6)], '+'), (2, [(2, 1), (2, 2), (2, 3)], '/'), (40, [(2, 4), (2, 5), (3, 4), (3, 5)], '*'), (14, [(3, 1), (4, 1), (5, 1), (6, 1)], '+'), (3600, [(3, 2), (3, 3), (4, 2), (4, 3), (5, 2), (5, 3)], '*'), (120, [(4, 4), (5, 4), (6, 4)], '*'), (1, [(4, 5), (4, 6), (5, 5), (5, 6)], '-'), (5, [(6, 2), (6, 3)], '-'), (5, [(6, 5), (6, 6)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 0.126s

FAILED (failures=43, errors=1)
----------------------------------------------------------------------
Time spent:

----------------------------------------------------------------------
Grades:

FC: 0.0/0.5
GAC: 0.0/0.75
MRV: 0.0/0.25
DH: 0.0/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 0.0/2.75
Code quality: ?/0.25

Running time: 2024_01_31-10:33:31

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... FAIL
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_1 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_2 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_3 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_4 (__main__.TestPropFC) ... FAIL
test_prop_fc_0 (__main__.TestPropFC) ... FAIL
test_prop_fc_1 (__main__.TestPropFC) ... FAIL
test_prop_fc_2 (__main__.TestPropFC) ... FAIL
test_prop_fc_3 (__main__.TestPropFC) ... FAIL
test_prop_fc_4 (__main__.TestPropFC) ... FAIL
test_prop_GAC_0 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_1 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_2 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_3 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_4 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_5 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_6 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_7 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_8 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_9 (__main__.TestPropGAC) ... FAIL

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_1 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


======================================================================
FAIL: test_bin_prop_fc_0 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_bin_prop_fc_1 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_bin_prop_fc_2 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_bin_prop_fc_3 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_bin_prop_fc_4 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_fc_0 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_fc_1 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_fc_2 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_fc_3 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_fc_4 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_0 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'list' object cannot be interpreted as an integer". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_1 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'list' object cannot be interpreted as an integer". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_2 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'list' object cannot be interpreted as an integer". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_GAC_3 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'list' object cannot be interpreted as an integer". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_GAC_4 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'list' object cannot be interpreted as an integer". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_5 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'list' object cannot be interpreted as an integer". Failed to solve board!
(5, [(4, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (1, [(1, 5), (2, 5)], '-'), (9, [(2, 2), (2, 3)], '+'), (3, [(3, 1), (3, 2)], '-'), (6, [(3, 3), (3, 4), (4, 4)], '*'), (9, [(3, 5), (4, 5)], '+'), (7, [(4, 1), (5, 1)], '+'), (3, [(4, 2), (4, 3)], '-'), (6, [(5, 2), (5, 3)], '*'), (4, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_6 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'list' object cannot be interpreted as an integer". Failed to solve board!
(5, [(10, [(1, 1), (1, 2), (2, 1), (2, 2)], '+'), (18, [(1, 3), (1, 4), (2, 3), (2, 4), (3, 4)], '+'), (2, [(1, 5), (2, 5), (3, 5)], '-'), (1, [(3, 1), (3, 2), (3, 3)], '-'), (600, [(4, 1), (4, 2), (4, 3), (5, 1), (5, 2), (5, 3)], '*'), (2, [(4, 4), (5, 4), (5, 5)], '/'), (3, [(4, 5)], '?')])


======================================================================
FAIL: test_prop_GAC_7 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'list' object cannot be interpreted as an integer". Failed to solve board!
(5, [(2, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (1, 5)], '-'), (1, [(2, 2)], '?'), (2, [(2, 3), (2, 4)], '-'), (9, [(2, 5), (3, 5), (4, 5)], '+'), (6, [(3, 1), (3, 2)], '*'), (4, [(3, 3)], '?'), (3, [(3, 4), (4, 4)], '+'), (3, [(4, 1), (5, 1)], '-'), (15, [(4, 2), (4, 3)], '*'), (9, [(5, 2), (5, 3)], '+'), (1, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_8 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'list' object cannot be interpreted as an integer". Failed to solve board!
(6, [(11, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (1, 3)], '/'), (20, [(1, 4), (2, 4)], '*'), (6, [(1, 5), (1, 6), (2, 6), (3, 6)], '*'), (3, [(2, 2), (2, 3)], '-'), (3, [(2, 5), (3, 5)], '/'), (240, [(3, 1), (3, 2), (4, 1), (4, 2)], '*'), (6, [(3, 3), (3, 4)], '*'), (6, [(4, 3), (5, 3)], '*'), (7, [(4, 4), (5, 4), (5, 5)], '+'), (30, [(4, 5), (4, 6)], '*'), (6, [(5, 1), (5, 2)], '*'), (9, [(5, 6), (6, 6)], '+'), (8, [(6, 1), (6, 2), (6, 3)], '+'), (2, [(6, 4), (6, 5)], '/')])


======================================================================
FAIL: test_prop_GAC_9 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'list' object cannot be interpreted as an integer". Failed to solve board!
(6, [(2, [(1, 1), (1, 2), (1, 3)], '/'), (3, [(1, 4), (1, 5)], '-'), (11, [(1, 6), (2, 6), (3, 6)], '+'), (2, [(2, 1), (2, 2), (2, 3)], '/'), (40, [(2, 4), (2, 5), (3, 4), (3, 5)], '*'), (14, [(3, 1), (4, 1), (5, 1), (6, 1)], '+'), (3600, [(3, 2), (3, 3), (4, 2), (4, 3), (5, 2), (5, 3)], '*'), (120, [(4, 4), (5, 4), (6, 4)], '*'), (1, [(4, 5), (4, 6), (5, 5), (5, 6)], '-'), (5, [(6, 2), (6, 3)], '-'), (5, [(6, 5), (6, 6)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 0.146s

FAILED (failures=43, errors=1)
----------------------------------------------------------------------
Time spent:

----------------------------------------------------------------------
Grades:

FC: 0.0/0.5
GAC: 0.0/0.75
MRV: 0.0/0.25
DH: 0.0/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 0.0/2.75
Code quality: ?/0.25

Running time: 2024_01_31-10:59:40

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... FAIL
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_1 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_2 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_3 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_4 (__main__.TestPropFC) ... FAIL
test_prop_fc_0 (__main__.TestPropFC) ... FAIL
test_prop_fc_1 (__main__.TestPropFC) ... FAIL
test_prop_fc_2 (__main__.TestPropFC) ... FAIL
test_prop_fc_3 (__main__.TestPropFC) ... FAIL
test_prop_fc_4 (__main__.TestPropFC) ... FAIL
test_prop_GAC_0 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_1 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_2 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_3 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_4 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_5 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_6 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_7 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_8 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_9 (__main__.TestPropGAC) ... FAIL

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_1 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


======================================================================
FAIL: test_bin_prop_fc_0 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_bin_prop_fc_1 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_bin_prop_fc_2 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_bin_prop_fc_3 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_bin_prop_fc_4 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_fc_0 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_fc_1 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_fc_2 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_fc_3 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_fc_4 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_0 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_1 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_2 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_GAC_3 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_GAC_4 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_5 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(4, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (1, [(1, 5), (2, 5)], '-'), (9, [(2, 2), (2, 3)], '+'), (3, [(3, 1), (3, 2)], '-'), (6, [(3, 3), (3, 4), (4, 4)], '*'), (9, [(3, 5), (4, 5)], '+'), (7, [(4, 1), (5, 1)], '+'), (3, [(4, 2), (4, 3)], '-'), (6, [(5, 2), (5, 3)], '*'), (4, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_6 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(10, [(1, 1), (1, 2), (2, 1), (2, 2)], '+'), (18, [(1, 3), (1, 4), (2, 3), (2, 4), (3, 4)], '+'), (2, [(1, 5), (2, 5), (3, 5)], '-'), (1, [(3, 1), (3, 2), (3, 3)], '-'), (600, [(4, 1), (4, 2), (4, 3), (5, 1), (5, 2), (5, 3)], '*'), (2, [(4, 4), (5, 4), (5, 5)], '/'), (3, [(4, 5)], '?')])


======================================================================
FAIL: test_prop_GAC_7 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(2, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (1, 5)], '-'), (1, [(2, 2)], '?'), (2, [(2, 3), (2, 4)], '-'), (9, [(2, 5), (3, 5), (4, 5)], '+'), (6, [(3, 1), (3, 2)], '*'), (4, [(3, 3)], '?'), (3, [(3, 4), (4, 4)], '+'), (3, [(4, 1), (5, 1)], '-'), (15, [(4, 2), (4, 3)], '*'), (9, [(5, 2), (5, 3)], '+'), (1, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_8 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(6, [(11, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (1, 3)], '/'), (20, [(1, 4), (2, 4)], '*'), (6, [(1, 5), (1, 6), (2, 6), (3, 6)], '*'), (3, [(2, 2), (2, 3)], '-'), (3, [(2, 5), (3, 5)], '/'), (240, [(3, 1), (3, 2), (4, 1), (4, 2)], '*'), (6, [(3, 3), (3, 4)], '*'), (6, [(4, 3), (5, 3)], '*'), (7, [(4, 4), (5, 4), (5, 5)], '+'), (30, [(4, 5), (4, 6)], '*'), (6, [(5, 1), (5, 2)], '*'), (9, [(5, 6), (6, 6)], '+'), (8, [(6, 1), (6, 2), (6, 3)], '+'), (2, [(6, 4), (6, 5)], '/')])


======================================================================
FAIL: test_prop_GAC_9 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(6, [(2, [(1, 1), (1, 2), (1, 3)], '/'), (3, [(1, 4), (1, 5)], '-'), (11, [(1, 6), (2, 6), (3, 6)], '+'), (2, [(2, 1), (2, 2), (2, 3)], '/'), (40, [(2, 4), (2, 5), (3, 4), (3, 5)], '*'), (14, [(3, 1), (4, 1), (5, 1), (6, 1)], '+'), (3600, [(3, 2), (3, 3), (4, 2), (4, 3), (5, 2), (5, 3)], '*'), (120, [(4, 4), (5, 4), (6, 4)], '*'), (1, [(4, 5), (4, 6), (5, 5), (5, 6)], '-'), (5, [(6, 2), (6, 3)], '-'), (5, [(6, 5), (6, 6)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 0.083s

FAILED (failures=43, errors=1)
----------------------------------------------------------------------
Time spent:

----------------------------------------------------------------------
Grades:

FC: 0.0/0.5
GAC: 0.0/0.75
MRV: 0.0/0.25
DH: 0.0/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 0.0/2.75
Code quality: ?/0.25

Running time: 2024_01_31-11:03:27

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... FAIL
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_1 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_2 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_3 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_4 (__main__.TestPropFC) ... FAIL
test_prop_fc_0 (__main__.TestPropFC) ... FAIL
test_prop_fc_1 (__main__.TestPropFC) ... FAIL
test_prop_fc_2 (__main__.TestPropFC) ... FAIL
test_prop_fc_3 (__main__.TestPropFC) ... FAIL
test_prop_fc_4 (__main__.TestPropFC) ... FAIL
test_prop_GAC_0 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_1 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_2 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_3 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_4 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_5 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_6 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_7 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_8 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_9 (__main__.TestPropGAC) ... FAIL

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_1 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


======================================================================
FAIL: test_bin_prop_fc_0 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_bin_prop_fc_1 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_bin_prop_fc_2 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_bin_prop_fc_3 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_bin_prop_fc_4 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_fc_0 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_fc_1 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_fc_2 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_fc_3 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_fc_4 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_0 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_1 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_2 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_GAC_3 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_GAC_4 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_5 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(4, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (1, [(1, 5), (2, 5)], '-'), (9, [(2, 2), (2, 3)], '+'), (3, [(3, 1), (3, 2)], '-'), (6, [(3, 3), (3, 4), (4, 4)], '*'), (9, [(3, 5), (4, 5)], '+'), (7, [(4, 1), (5, 1)], '+'), (3, [(4, 2), (4, 3)], '-'), (6, [(5, 2), (5, 3)], '*'), (4, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_6 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(10, [(1, 1), (1, 2), (2, 1), (2, 2)], '+'), (18, [(1, 3), (1, 4), (2, 3), (2, 4), (3, 4)], '+'), (2, [(1, 5), (2, 5), (3, 5)], '-'), (1, [(3, 1), (3, 2), (3, 3)], '-'), (600, [(4, 1), (4, 2), (4, 3), (5, 1), (5, 2), (5, 3)], '*'), (2, [(4, 4), (5, 4), (5, 5)], '/'), (3, [(4, 5)], '?')])


======================================================================
FAIL: test_prop_GAC_7 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(2, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (1, 5)], '-'), (1, [(2, 2)], '?'), (2, [(2, 3), (2, 4)], '-'), (9, [(2, 5), (3, 5), (4, 5)], '+'), (6, [(3, 1), (3, 2)], '*'), (4, [(3, 3)], '?'), (3, [(3, 4), (4, 4)], '+'), (3, [(4, 1), (5, 1)], '-'), (15, [(4, 2), (4, 3)], '*'), (9, [(5, 2), (5, 3)], '+'), (1, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_8 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(6, [(11, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (1, 3)], '/'), (20, [(1, 4), (2, 4)], '*'), (6, [(1, 5), (1, 6), (2, 6), (3, 6)], '*'), (3, [(2, 2), (2, 3)], '-'), (3, [(2, 5), (3, 5)], '/'), (240, [(3, 1), (3, 2), (4, 1), (4, 2)], '*'), (6, [(3, 3), (3, 4)], '*'), (6, [(4, 3), (5, 3)], '*'), (7, [(4, 4), (5, 4), (5, 5)], '+'), (30, [(4, 5), (4, 6)], '*'), (6, [(5, 1), (5, 2)], '*'), (9, [(5, 6), (6, 6)], '+'), (8, [(6, 1), (6, 2), (6, 3)], '+'), (2, [(6, 4), (6, 5)], '/')])


======================================================================
FAIL: test_prop_GAC_9 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(6, [(2, [(1, 1), (1, 2), (1, 3)], '/'), (3, [(1, 4), (1, 5)], '-'), (11, [(1, 6), (2, 6), (3, 6)], '+'), (2, [(2, 1), (2, 2), (2, 3)], '/'), (40, [(2, 4), (2, 5), (3, 4), (3, 5)], '*'), (14, [(3, 1), (4, 1), (5, 1), (6, 1)], '+'), (3600, [(3, 2), (3, 3), (4, 2), (4, 3), (5, 2), (5, 3)], '*'), (120, [(4, 4), (5, 4), (6, 4)], '*'), (1, [(4, 5), (4, 6), (5, 5), (5, 6)], '-'), (5, [(6, 2), (6, 3)], '-'), (5, [(6, 5), (6, 6)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 0.131s

FAILED (failures=43, errors=1)
----------------------------------------------------------------------
Time spent:

----------------------------------------------------------------------
Grades:

FC: 0.0/0.5
GAC: 0.0/0.75
MRV: 0.0/0.25
DH: 0.0/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 0.0/2.75
Code quality: ?/0.25

Running time: 2024_01_31-11:03:48

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... FAIL
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_1 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_2 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_3 (__main__.TestPropFC) ... FAIL
test_bin_prop_fc_4 (__main__.TestPropFC) ... FAIL
test_prop_fc_0 (__main__.TestPropFC) ... FAIL
test_prop_fc_1 (__main__.TestPropFC) ... FAIL
test_prop_fc_2 (__main__.TestPropFC) ... FAIL
test_prop_fc_3 (__main__.TestPropFC) ... FAIL
test_prop_fc_4 (__main__.TestPropFC) ... FAIL
test_prop_GAC_0 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_1 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_2 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_3 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_4 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_5 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_6 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_7 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_8 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_9 (__main__.TestPropGAC) ... FAIL

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_1 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


======================================================================
FAIL: test_bin_prop_fc_0 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_bin_prop_fc_1 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_bin_prop_fc_2 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_bin_prop_fc_3 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_bin_prop_fc_4 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_fc_0 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_fc_1 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_fc_2 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_fc_3 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_fc_4 (__main__.TestPropFC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'get_all_variables'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_0 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_1 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_2 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_GAC_3 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_GAC_4 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_5 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(4, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (1, [(1, 5), (2, 5)], '-'), (9, [(2, 2), (2, 3)], '+'), (3, [(3, 1), (3, 2)], '-'), (6, [(3, 3), (3, 4), (4, 4)], '*'), (9, [(3, 5), (4, 5)], '+'), (7, [(4, 1), (5, 1)], '+'), (3, [(4, 2), (4, 3)], '-'), (6, [(5, 2), (5, 3)], '*'), (4, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_6 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(10, [(1, 1), (1, 2), (2, 1), (2, 2)], '+'), (18, [(1, 3), (1, 4), (2, 3), (2, 4), (3, 4)], '+'), (2, [(1, 5), (2, 5), (3, 5)], '-'), (1, [(3, 1), (3, 2), (3, 3)], '-'), (600, [(4, 1), (4, 2), (4, 3), (5, 1), (5, 2), (5, 3)], '*'), (2, [(4, 4), (5, 4), (5, 5)], '/'), (3, [(4, 5)], '?')])


======================================================================
FAIL: test_prop_GAC_7 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(2, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (1, 5)], '-'), (1, [(2, 2)], '?'), (2, [(2, 3), (2, 4)], '-'), (9, [(2, 5), (3, 5), (4, 5)], '+'), (6, [(3, 1), (3, 2)], '*'), (4, [(3, 3)], '?'), (3, [(3, 4), (4, 4)], '+'), (3, [(4, 1), (5, 1)], '-'), (15, [(4, 2), (4, 3)], '*'), (9, [(5, 2), (5, 3)], '+'), (1, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_8 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(6, [(11, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (1, 3)], '/'), (20, [(1, 4), (2, 4)], '*'), (6, [(1, 5), (1, 6), (2, 6), (3, 6)], '*'), (3, [(2, 2), (2, 3)], '-'), (3, [(2, 5), (3, 5)], '/'), (240, [(3, 1), (3, 2), (4, 1), (4, 2)], '*'), (6, [(3, 3), (3, 4)], '*'), (6, [(4, 3), (5, 3)], '*'), (7, [(4, 4), (5, 4), (5, 5)], '+'), (30, [(4, 5), (4, 6)], '*'), (6, [(5, 1), (5, 2)], '*'), (9, [(5, 6), (6, 6)], '+'), (8, [(6, 1), (6, 2), (6, 3)], '+'), (2, [(6, 4), (6, 5)], '/')])


======================================================================
FAIL: test_prop_GAC_9 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(6, [(2, [(1, 1), (1, 2), (1, 3)], '/'), (3, [(1, 4), (1, 5)], '-'), (11, [(1, 6), (2, 6), (3, 6)], '+'), (2, [(2, 1), (2, 2), (2, 3)], '/'), (40, [(2, 4), (2, 5), (3, 4), (3, 5)], '*'), (14, [(3, 1), (4, 1), (5, 1), (6, 1)], '+'), (3600, [(3, 2), (3, 3), (4, 2), (4, 3), (5, 2), (5, 3)], '*'), (120, [(4, 4), (5, 4), (6, 4)], '*'), (1, [(4, 5), (4, 6), (5, 5), (5, 6)], '-'), (5, [(6, 2), (6, 3)], '-'), (5, [(6, 5), (6, 6)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 0.172s

FAILED (failures=43, errors=1)
----------------------------------------------------------------------
Time spent:

----------------------------------------------------------------------
Grades:

FC: 0.0/0.5
GAC: 0.0/0.75
MRV: 0.0/0.25
DH: 0.0/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 0.0/2.75
Code quality: ?/0.25

Running time: 2024_01_31-11:04:49

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... FAIL
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_1 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_2 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_3 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_4 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_5 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_6 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_7 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_8 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_9 (__main__.TestPropGAC) ... FAIL

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_1 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


======================================================================
FAIL: test_prop_GAC_0 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_1 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_2 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_GAC_3 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_GAC_4 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_5 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(4, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (1, [(1, 5), (2, 5)], '-'), (9, [(2, 2), (2, 3)], '+'), (3, [(3, 1), (3, 2)], '-'), (6, [(3, 3), (3, 4), (4, 4)], '*'), (9, [(3, 5), (4, 5)], '+'), (7, [(4, 1), (5, 1)], '+'), (3, [(4, 2), (4, 3)], '-'), (6, [(5, 2), (5, 3)], '*'), (4, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_6 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(10, [(1, 1), (1, 2), (2, 1), (2, 2)], '+'), (18, [(1, 3), (1, 4), (2, 3), (2, 4), (3, 4)], '+'), (2, [(1, 5), (2, 5), (3, 5)], '-'), (1, [(3, 1), (3, 2), (3, 3)], '-'), (600, [(4, 1), (4, 2), (4, 3), (5, 1), (5, 2), (5, 3)], '*'), (2, [(4, 4), (5, 4), (5, 5)], '/'), (3, [(4, 5)], '?')])


======================================================================
FAIL: test_prop_GAC_7 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(2, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (1, 5)], '-'), (1, [(2, 2)], '?'), (2, [(2, 3), (2, 4)], '-'), (9, [(2, 5), (3, 5), (4, 5)], '+'), (6, [(3, 1), (3, 2)], '*'), (4, [(3, 3)], '?'), (3, [(3, 4), (4, 4)], '+'), (3, [(4, 1), (5, 1)], '-'), (15, [(4, 2), (4, 3)], '*'), (9, [(5, 2), (5, 3)], '+'), (1, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_8 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(6, [(11, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (1, 3)], '/'), (20, [(1, 4), (2, 4)], '*'), (6, [(1, 5), (1, 6), (2, 6), (3, 6)], '*'), (3, [(2, 2), (2, 3)], '-'), (3, [(2, 5), (3, 5)], '/'), (240, [(3, 1), (3, 2), (4, 1), (4, 2)], '*'), (6, [(3, 3), (3, 4)], '*'), (6, [(4, 3), (5, 3)], '*'), (7, [(4, 4), (5, 4), (5, 5)], '+'), (30, [(4, 5), (4, 6)], '*'), (6, [(5, 1), (5, 2)], '*'), (9, [(5, 6), (6, 6)], '+'), (8, [(6, 1), (6, 2), (6, 3)], '+'), (2, [(6, 4), (6, 5)], '/')])


======================================================================
FAIL: test_prop_GAC_9 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(6, [(2, [(1, 1), (1, 2), (1, 3)], '/'), (3, [(1, 4), (1, 5)], '-'), (11, [(1, 6), (2, 6), (3, 6)], '+'), (2, [(2, 1), (2, 2), (2, 3)], '/'), (40, [(2, 4), (2, 5), (3, 4), (3, 5)], '*'), (14, [(3, 1), (4, 1), (5, 1), (6, 1)], '+'), (3600, [(3, 2), (3, 3), (4, 2), (4, 3), (5, 2), (5, 3)], '*'), (120, [(4, 4), (5, 4), (6, 4)], '*'), (1, [(4, 5), (4, 6), (5, 5), (5, 6)], '-'), (5, [(6, 2), (6, 3)], '-'), (5, [(6, 5), (6, 6)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 3.141s

FAILED (failures=33, errors=1)
----------------------------------------------------------------------
Time spent:

test_bin_prop_fc_0: 0.0010s
test_bin_prop_fc_1: 0.0044s
test_bin_prop_fc_2: 0.0031s
test_bin_prop_fc_3: 0.0030s
test_bin_prop_fc_4: 0.0029s
test_prop_fc_0: 0.0015s
test_prop_fc_1: 0.6613s
test_prop_fc_2: 1.2191s
test_prop_fc_3: 0.0016s
test_prop_fc_4: 1.1390s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.0/0.75
MRV: 0.0/0.25
DH: 0.0/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 0.5/2.75
Code quality: ?/0.25

Running time: 2024_01_31-11:08:06

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... FAIL
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_1 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_2 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_3 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_4 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_5 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_6 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_7 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_8 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_9 (__main__.TestPropGAC) ... FAIL

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_1 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


======================================================================
FAIL: test_prop_GAC_0 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_1 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_2 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_GAC_3 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_GAC_4 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_5 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(4, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (1, [(1, 5), (2, 5)], '-'), (9, [(2, 2), (2, 3)], '+'), (3, [(3, 1), (3, 2)], '-'), (6, [(3, 3), (3, 4), (4, 4)], '*'), (9, [(3, 5), (4, 5)], '+'), (7, [(4, 1), (5, 1)], '+'), (3, [(4, 2), (4, 3)], '-'), (6, [(5, 2), (5, 3)], '*'), (4, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_6 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(10, [(1, 1), (1, 2), (2, 1), (2, 2)], '+'), (18, [(1, 3), (1, 4), (2, 3), (2, 4), (3, 4)], '+'), (2, [(1, 5), (2, 5), (3, 5)], '-'), (1, [(3, 1), (3, 2), (3, 3)], '-'), (600, [(4, 1), (4, 2), (4, 3), (5, 1), (5, 2), (5, 3)], '*'), (2, [(4, 4), (5, 4), (5, 5)], '/'), (3, [(4, 5)], '?')])


======================================================================
FAIL: test_prop_GAC_7 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(5, [(2, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (1, 5)], '-'), (1, [(2, 2)], '?'), (2, [(2, 3), (2, 4)], '-'), (9, [(2, 5), (3, 5), (4, 5)], '+'), (6, [(3, 1), (3, 2)], '*'), (4, [(3, 3)], '?'), (3, [(3, 4), (4, 4)], '+'), (3, [(4, 1), (5, 1)], '-'), (15, [(4, 2), (4, 3)], '*'), (9, [(5, 2), (5, 3)], '+'), (1, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_8 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(6, [(11, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (1, 3)], '/'), (20, [(1, 4), (2, 4)], '*'), (6, [(1, 5), (1, 6), (2, 6), (3, 6)], '*'), (3, [(2, 2), (2, 3)], '-'), (3, [(2, 5), (3, 5)], '/'), (240, [(3, 1), (3, 2), (4, 1), (4, 2)], '*'), (6, [(3, 3), (3, 4)], '*'), (6, [(4, 3), (5, 3)], '*'), (7, [(4, 4), (5, 4), (5, 5)], '+'), (30, [(4, 5), (4, 6)], '*'), (6, [(5, 1), (5, 2)], '*'), (9, [(5, 6), (6, 6)], '+'), (8, [(6, 1), (6, 2), (6, 3)], '+'), (2, [(6, 4), (6, 5)], '/')])


======================================================================
FAIL: test_prop_GAC_9 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'Constraint' object has no attribute 'is_assigned'". Failed to solve board!
(6, [(2, [(1, 1), (1, 2), (1, 3)], '/'), (3, [(1, 4), (1, 5)], '-'), (11, [(1, 6), (2, 6), (3, 6)], '+'), (2, [(2, 1), (2, 2), (2, 3)], '/'), (40, [(2, 4), (2, 5), (3, 4), (3, 5)], '*'), (14, [(3, 1), (4, 1), (5, 1), (6, 1)], '+'), (3600, [(3, 2), (3, 3), (4, 2), (4, 3), (5, 2), (5, 3)], '*'), (120, [(4, 4), (5, 4), (6, 4)], '*'), (1, [(4, 5), (4, 6), (5, 5), (5, 6)], '-'), (5, [(6, 2), (6, 3)], '-'), (5, [(6, 5), (6, 6)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 3.457s

FAILED (failures=33, errors=1)
----------------------------------------------------------------------
Time spent:

test_bin_prop_fc_0: 0.0009s
test_bin_prop_fc_1: 0.0043s
test_bin_prop_fc_2: 0.0030s
test_bin_prop_fc_3: 0.0029s
test_bin_prop_fc_4: 0.0032s
test_prop_fc_0: 0.0022s
test_prop_fc_1: 0.6650s
test_prop_fc_2: 1.2806s
test_prop_fc_3: 0.0018s
test_prop_fc_4: 1.4118s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.0/0.75
MRV: 0.0/0.25
DH: 0.0/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 0.5/2.75
Code quality: ?/0.25

Running time: 2024_01_31-11:10:12

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... FAIL
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_1 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_2 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_3 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_4 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_5 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_6 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_7 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_8 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_9 (__main__.TestPropGAC) ... FAIL

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_1 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


======================================================================
FAIL: test_prop_GAC_0 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "name 'con' is not defined". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_1 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "name 'con' is not defined". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_2 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "name 'con' is not defined". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_GAC_3 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "name 'con' is not defined". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_GAC_4 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "name 'con' is not defined". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_5 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "name 'con' is not defined". Failed to solve board!
(5, [(4, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (1, [(1, 5), (2, 5)], '-'), (9, [(2, 2), (2, 3)], '+'), (3, [(3, 1), (3, 2)], '-'), (6, [(3, 3), (3, 4), (4, 4)], '*'), (9, [(3, 5), (4, 5)], '+'), (7, [(4, 1), (5, 1)], '+'), (3, [(4, 2), (4, 3)], '-'), (6, [(5, 2), (5, 3)], '*'), (4, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_6 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "name 'con' is not defined". Failed to solve board!
(5, [(10, [(1, 1), (1, 2), (2, 1), (2, 2)], '+'), (18, [(1, 3), (1, 4), (2, 3), (2, 4), (3, 4)], '+'), (2, [(1, 5), (2, 5), (3, 5)], '-'), (1, [(3, 1), (3, 2), (3, 3)], '-'), (600, [(4, 1), (4, 2), (4, 3), (5, 1), (5, 2), (5, 3)], '*'), (2, [(4, 4), (5, 4), (5, 5)], '/'), (3, [(4, 5)], '?')])


======================================================================
FAIL: test_prop_GAC_7 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "name 'con' is not defined". Failed to solve board!
(5, [(2, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (1, 5)], '-'), (1, [(2, 2)], '?'), (2, [(2, 3), (2, 4)], '-'), (9, [(2, 5), (3, 5), (4, 5)], '+'), (6, [(3, 1), (3, 2)], '*'), (4, [(3, 3)], '?'), (3, [(3, 4), (4, 4)], '+'), (3, [(4, 1), (5, 1)], '-'), (15, [(4, 2), (4, 3)], '*'), (9, [(5, 2), (5, 3)], '+'), (1, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_8 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "name 'con' is not defined". Failed to solve board!
(6, [(11, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (1, 3)], '/'), (20, [(1, 4), (2, 4)], '*'), (6, [(1, 5), (1, 6), (2, 6), (3, 6)], '*'), (3, [(2, 2), (2, 3)], '-'), (3, [(2, 5), (3, 5)], '/'), (240, [(3, 1), (3, 2), (4, 1), (4, 2)], '*'), (6, [(3, 3), (3, 4)], '*'), (6, [(4, 3), (5, 3)], '*'), (7, [(4, 4), (5, 4), (5, 5)], '+'), (30, [(4, 5), (4, 6)], '*'), (6, [(5, 1), (5, 2)], '*'), (9, [(5, 6), (6, 6)], '+'), (8, [(6, 1), (6, 2), (6, 3)], '+'), (2, [(6, 4), (6, 5)], '/')])


======================================================================
FAIL: test_prop_GAC_9 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "name 'con' is not defined". Failed to solve board!
(6, [(2, [(1, 1), (1, 2), (1, 3)], '/'), (3, [(1, 4), (1, 5)], '-'), (11, [(1, 6), (2, 6), (3, 6)], '+'), (2, [(2, 1), (2, 2), (2, 3)], '/'), (40, [(2, 4), (2, 5), (3, 4), (3, 5)], '*'), (14, [(3, 1), (4, 1), (5, 1), (6, 1)], '+'), (3600, [(3, 2), (3, 3), (4, 2), (4, 3), (5, 2), (5, 3)], '*'), (120, [(4, 4), (5, 4), (6, 4)], '*'), (1, [(4, 5), (4, 6), (5, 5), (5, 6)], '-'), (5, [(6, 2), (6, 3)], '-'), (5, [(6, 5), (6, 6)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 3.146s

FAILED (failures=33, errors=1)
----------------------------------------------------------------------
Time spent:

test_bin_prop_fc_0: 0.0009s
test_bin_prop_fc_1: 0.0044s
test_bin_prop_fc_2: 0.0038s
test_bin_prop_fc_3: 0.0047s
test_bin_prop_fc_4: 0.0041s
test_prop_fc_0: 0.0016s
test_prop_fc_1: 0.6736s
test_prop_fc_2: 1.1928s
test_prop_fc_3: 0.0034s
test_prop_fc_4: 1.1816s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.0/0.75
MRV: 0.0/0.25
DH: 0.0/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 0.5/2.75
Code quality: ?/0.25

Running time: 2024_01_31-11:49:35

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... FAIL
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_1 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_2 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_3 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_4 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_5 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_6 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_7 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_8 (__main__.TestPropGAC) ... FAIL
test_prop_GAC_9 (__main__.TestPropGAC) ... FAIL

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_1 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


======================================================================
FAIL: test_prop_GAC_0 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "not enough values to unpack (expected 2, got 0)". Failed to solve board!
(3, [(3, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (2, 2)], '-'), (6, [(1, 3), (2, 3), (3, 3)], '*'), (5, [(3, 1), (3, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_1 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "too many values to unpack (expected 2)". Failed to solve board!
(4, [(6, [(1, 1), (2, 1)], '*'), (3, [(1, 2), (1, 3)], '+'), (3, [(1, 4), (2, 4)], '-'), (7, [(2, 2), (2, 3)], '+'), (2, [(3, 1), (3, 2)], '/'), (3, [(3, 3), (4, 3)], '-'), (6, [(3, 4), (4, 4)], '*'), (7, [(4, 1), (4, 2)], '+')])


======================================================================
FAIL: test_prop_GAC_2 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "not enough values to unpack (expected 2, got 1)". Failed to solve board!
(4, [(16, [(1, 1), (1, 2), (2, 2)], '*'), (7, [(1, 3), (1, 4), (2, 3)], '+'), (4, [(2, 4)], '?'), (2, [(2, 1), (3, 1)], '-'), (2, [(3, 3), (3, 4)], '/'), (2, [(4, 3), (4, 4)], '/'), (12, [(3, 2), (4, 1), (4, 2)], '*')])


======================================================================
FAIL: test_prop_GAC_3 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "not enough values to unpack (expected 2, got 0)". Failed to solve board!
(4, [(4, [(1, 1)], '?'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (6, [(2, 1), (2, 2), (3, 2)], '+'), (12, [(2, 3), (3, 3), (3, 4)], '*'), (1, [(3, 1), (4, 1)], '-'), (5, [(4, 2), (4, 3)], '+'), (2, [(4, 4)], '?')])


======================================================================
FAIL: test_prop_GAC_4 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "too many values to unpack (expected 2)". Failed to solve board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 1)], '+'), (6, [(2, 4), (3, 4)], '*'), (2, [(3, 2), (3, 3)], '-'), (2, [(4, 1), (4, 2)], '-'), (2, [(4, 3), (4, 4)], '/')])


======================================================================
FAIL: test_prop_GAC_5 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "too many values to unpack (expected 2)". Failed to solve board!
(5, [(4, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (2, 4)], '-'), (1, [(1, 5), (2, 5)], '-'), (9, [(2, 2), (2, 3)], '+'), (3, [(3, 1), (3, 2)], '-'), (6, [(3, 3), (3, 4), (4, 4)], '*'), (9, [(3, 5), (4, 5)], '+'), (7, [(4, 1), (5, 1)], '+'), (3, [(4, 2), (4, 3)], '-'), (6, [(5, 2), (5, 3)], '*'), (4, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_6 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "not enough values to unpack (expected 2, got 0)". Failed to solve board!
(5, [(10, [(1, 1), (1, 2), (2, 1), (2, 2)], '+'), (18, [(1, 3), (1, 4), (2, 3), (2, 4), (3, 4)], '+'), (2, [(1, 5), (2, 5), (3, 5)], '-'), (1, [(3, 1), (3, 2), (3, 3)], '-'), (600, [(4, 1), (4, 2), (4, 3), (5, 1), (5, 2), (5, 3)], '*'), (2, [(4, 4), (5, 4), (5, 5)], '/'), (3, [(4, 5)], '?')])


======================================================================
FAIL: test_prop_GAC_7 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "not enough values to unpack (expected 2, got 1)". Failed to solve board!
(5, [(2, [(1, 1), (2, 1)], '-'), (2, [(1, 2), (1, 3)], '/'), (1, [(1, 4), (1, 5)], '-'), (1, [(2, 2)], '?'), (2, [(2, 3), (2, 4)], '-'), (9, [(2, 5), (3, 5), (4, 5)], '+'), (6, [(3, 1), (3, 2)], '*'), (4, [(3, 3)], '?'), (3, [(3, 4), (4, 4)], '+'), (3, [(4, 1), (5, 1)], '-'), (15, [(4, 2), (4, 3)], '*'), (9, [(5, 2), (5, 3)], '+'), (1, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_prop_GAC_8 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "not enough values to unpack (expected 2, got 1)". Failed to solve board!
(6, [(11, [(1, 1), (2, 1)], '+'), (2, [(1, 2), (1, 3)], '/'), (20, [(1, 4), (2, 4)], '*'), (6, [(1, 5), (1, 6), (2, 6), (3, 6)], '*'), (3, [(2, 2), (2, 3)], '-'), (3, [(2, 5), (3, 5)], '/'), (240, [(3, 1), (3, 2), (4, 1), (4, 2)], '*'), (6, [(3, 3), (3, 4)], '*'), (6, [(4, 3), (5, 3)], '*'), (7, [(4, 4), (5, 4), (5, 5)], '+'), (30, [(4, 5), (4, 6)], '*'), (6, [(5, 1), (5, 2)], '*'), (9, [(5, 6), (6, 6)], '+'), (8, [(6, 1), (6, 2), (6, 3)], '+'), (2, [(6, 4), (6, 5)], '/')])


======================================================================
FAIL: test_prop_GAC_9 (__main__.TestPropGAC)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "too many values to unpack (expected 2)". Failed to solve board!
(6, [(2, [(1, 1), (1, 2), (1, 3)], '/'), (3, [(1, 4), (1, 5)], '-'), (11, [(1, 6), (2, 6), (3, 6)], '+'), (2, [(2, 1), (2, 2), (2, 3)], '/'), (40, [(2, 4), (2, 5), (3, 4), (3, 5)], '*'), (14, [(3, 1), (4, 1), (5, 1), (6, 1)], '+'), (3600, [(3, 2), (3, 3), (4, 2), (4, 3), (5, 2), (5, 3)], '*'), (120, [(4, 4), (5, 4), (6, 4)], '*'), (1, [(4, 5), (4, 6), (5, 5), (5, 6)], '-'), (5, [(6, 2), (6, 3)], '-'), (5, [(6, 5), (6, 6)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 2.972s

FAILED (failures=33, errors=1)
----------------------------------------------------------------------
Time spent:

test_bin_prop_fc_0: 0.0011s
test_bin_prop_fc_1: 0.0043s
test_bin_prop_fc_2: 0.0032s
test_bin_prop_fc_3: 0.0036s
test_bin_prop_fc_4: 0.0040s
test_prop_fc_0: 0.0018s
test_prop_fc_1: 0.6200s
test_prop_fc_2: 1.1443s
test_prop_fc_3: 0.0017s
test_prop_fc_4: 1.0655s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.0/0.75
MRV: 0.0/0.25
DH: 0.0/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 0.5/2.75
Code quality: ?/0.25

Running time: 2024_01_31-11:50:04

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... FAIL
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_1 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord DH

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 5.706s

FAILED (failures=23, errors=1)
----------------------------------------------------------------------
Time spent:

test_bin_prop_fc_0: 0.0009s
test_bin_prop_fc_1: 0.0045s
test_bin_prop_fc_2: 0.0043s
test_bin_prop_fc_3: 0.0040s
test_bin_prop_fc_4: 0.0039s
test_prop_fc_0: 0.0018s
test_prop_fc_1: 0.7093s
test_prop_fc_2: 1.2651s
test_prop_fc_3: 0.0018s
test_prop_fc_4: 1.1093s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0039s
test_prop_GAC_2: 0.0062s
test_prop_GAC_3: 0.0025s
test_prop_GAC_4: 0.0045s
test_prop_GAC_5: 0.0583s
test_prop_GAC_6: 0.2532s
test_prop_GAC_7: 0.0491s
test_prop_GAC_8: 1.2845s
test_prop_GAC_9: 0.9244s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.0/0.25
DH: 0.0/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 1.25/2.75
Code quality: ?/0.25

Running time: 2024_01_31-11:51:56

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... FAIL
test_mrv_2 (__main__.TestMRV) ... FAIL
test_mrv_3 (__main__.TestMRV) ... FAIL
test_mrv_4 (__main__.TestMRV) ... FAIL
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed second DH Test

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed third DH Test

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed fourth DH Test

======================================================================
FAIL: test_mrv_1 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_2 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_3 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_mrv_4 (__main__.TestMRV)
----------------------------------------------------------------------
AssertionError: False is not true : No Variable Returned from Ord MRV

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 5.566s

FAILED (failures=22, errors=1)
----------------------------------------------------------------------
Time spent:

test_bin_prop_fc_0: 0.0010s
test_bin_prop_fc_1: 0.0039s
test_bin_prop_fc_2: 0.0029s
test_bin_prop_fc_3: 0.0036s
test_bin_prop_fc_4: 0.0030s
test_prop_fc_0: 0.0017s
test_prop_fc_1: 0.6551s
test_prop_fc_2: 1.1324s
test_prop_fc_3: 0.0017s
test_prop_fc_4: 1.1828s
test_prop_GAC_0: 0.0012s
test_prop_GAC_1: 0.0036s
test_prop_GAC_2: 0.0071s
test_prop_GAC_3: 0.0041s
test_prop_GAC_4: 0.0076s
test_prop_GAC_5: 0.0792s
test_prop_GAC_6: 0.2243s
test_prop_GAC_7: 0.0503s
test_prop_GAC_8: 1.2598s
test_prop_GAC_9: 0.9275s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.0/0.25
DH: 0.0625/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 1.3125/2.75
Code quality: ?/0.25

Running time: 2024_01_31-13:19:22

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed second DH Test

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed third DH Test

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed fourth DH Test

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 5.632s

FAILED (failures=18, errors=1)
----------------------------------------------------------------------
Time spent:

test_bin_prop_fc_0: 0.0009s
test_bin_prop_fc_1: 0.0036s
test_bin_prop_fc_2: 0.0029s
test_bin_prop_fc_3: 0.0030s
test_bin_prop_fc_4: 0.0030s
test_prop_fc_0: 0.0017s
test_prop_fc_1: 0.6307s
test_prop_fc_2: 1.1267s
test_prop_fc_3: 0.0022s
test_prop_fc_4: 1.2835s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0020s
test_prop_GAC_2: 0.0034s
test_prop_GAC_3: 0.0021s
test_prop_GAC_4: 0.0032s
test_prop_GAC_5: 0.0563s
test_prop_GAC_6: 0.2363s
test_prop_GAC_7: 0.0500s
test_prop_GAC_8: 1.2369s
test_prop_GAC_9: 0.9726s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.0625/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 1.5625/2.75
Code quality: ?/0.25

Running time: 2024_01_31-13:21:51

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed second DH Test

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed third DH Test

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed fourth DH Test

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 6.297s

FAILED (failures=18, errors=1)
----------------------------------------------------------------------
Time spent:

test_bin_prop_fc_0: 0.0043s
test_bin_prop_fc_1: 0.0105s
test_bin_prop_fc_2: 0.0128s
test_bin_prop_fc_3: 0.0124s
test_bin_prop_fc_4: 0.0133s
test_prop_fc_0: 0.0083s
test_prop_fc_1: 0.9986s
test_prop_fc_2: 1.3347s
test_prop_fc_3: 0.0024s
test_prop_fc_4: 1.2551s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0019s
test_prop_GAC_2: 0.0033s
test_prop_GAC_3: 0.0026s
test_prop_GAC_4: 0.0031s
test_prop_GAC_5: 0.0459s
test_prop_GAC_6: 0.2668s
test_prop_GAC_7: 0.0634s
test_prop_GAC_8: 1.2397s
test_prop_GAC_9: 0.9749s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.0625/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 1.5625/2.75
Code quality: ?/0.25

Running time: 2024_01_31-14:43:35

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_2 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_3 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_4 (__main__.TestBinaryGrid) ... FAIL
test_bne_grid_5 (__main__.TestBinaryGrid) ... FAIL
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... FAIL
test_dh_3 (__main__.TestDH) ... FAIL
test_dh_4 (__main__.TestDH) ... FAIL
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_bne_grid_1 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_bne_grid_2 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(3, [(1, 1), (2, 1)], '+'), (1, [(1, 2)], '?'), (8, [(1, 3), (2, 3), (2, 2)], '+'), (3, [(3, 1)], '?'), (3, [(3, 2), (3, 3)], '+')])


======================================================================
FAIL: test_bne_grid_3 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (3, [(1, 3), (1, 4), (2, 3)], '*'), (8, [(2, 1), (2, 2), (3, 2)], '+'), (4, [(3, 4)], '?'), (3, [(3, 1), (4, 1)], '-'), (4, [(3, 3)], '?'), (6, [(3, 4), (4, 4)], '*'), (2, [(4, 2), (4, 3)], '/')])


======================================================================
FAIL: test_bne_grid_4 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(1, [(1, 1), (2, 1)], '-'), (10, [(1, 2), (1, 3), (2, 3), (4, 3)], '+'), (9, [(1, 4), (1, 5), (2, 4), (2, 5)], '+'), (40, [(2, 2), (3, 1), (3, 2)], '*'), (50, [(3, 4), (4, 3), (4, 4)], '*'), (10, [(3, 5), (4, 5), (5, 5)], '+'), (9, [(4, 1), (4, 2), (5, 1), (5, 2)], '+'), (4, [(5, 3), (5, 4)], '/')])


======================================================================
FAIL: test_bne_grid_5 (__main__.TestBinaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(11, [(1, 1), (2, 1)], '+'), (3, [(1, 2), (2, 2)], '*'), (20, [(1, 3), (2, 3), (3, 3)], '*'), (2, [(1, 4), (1, 5)], '-'), (6, [(1, 6), (2, 6)], '/'), (6, [(2, 4), (2, 5)], '*'), (5, [(3, 1), (4, 1)], '+'), (40, [(3, 2), (4, 2), (5, 2)], '*'), (10, [(3, 4), (4, 4)], '+'), (10, [(3, 5), (3, 6)], '*'), (3, [(4, 3), (5, 3)], '-'), (8, [(4, 5), (4, 6), (5, 6)], '+'), (1, [(5, 1), (6, 1), (6, 2)], '-'), (11, [(5, 4), (5, 5)], '+'), (1, [(6, 3), (6, 4)], '-'), (2, [(6, 5), (6, 6)], '-')])


======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_dh_2 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed second DH Test

======================================================================
FAIL: test_dh_3 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed third DH Test

======================================================================
FAIL: test_dh_4 (__main__.TestDH)
----------------------------------------------------------------------
AssertionError: False is not true : Failed fourth DH Test

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 8.271s

FAILED (failures=18, errors=1)
----------------------------------------------------------------------
Time spent:

test_bin_prop_fc_0: 0.0027s
test_bin_prop_fc_1: 0.0088s
test_bin_prop_fc_2: 0.0107s
test_bin_prop_fc_3: 0.0136s
test_bin_prop_fc_4: 0.0127s
test_prop_fc_0: 0.0043s
test_prop_fc_1: 0.9773s
test_prop_fc_2: 1.9511s
test_prop_fc_3: 0.0041s
test_prop_fc_4: 2.0501s
test_prop_GAC_0: 0.0010s
test_prop_GAC_1: 0.0027s
test_prop_GAC_2: 0.0074s
test_prop_GAC_3: 0.0029s
test_prop_GAC_4: 0.0111s
test_prop_GAC_5: 0.0667s
test_prop_GAC_6: 0.2816s
test_prop_GAC_7: 0.0679s
test_prop_GAC_8: 1.7378s
test_prop_GAC_9: 1.0327s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.0625/0.25
BINARY: 0.0/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 1.5625/2.75
Code quality: ?/0.25

Running time: 2024_02_02-15:31:25

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object is not subscriptable". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 6.627s

FAILED (failures=10, errors=1)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0126s
test_bne_grid_2: 0.0013s
test_bne_grid_3: 0.0326s
test_bne_grid_4: 0.0811s
test_bne_grid_5: 0.3285s
test_bin_prop_fc_0: 0.0203s
test_bin_prop_fc_1: 0.0131s
test_bin_prop_fc_2: 0.0167s
test_bin_prop_fc_3: 0.0165s
test_bin_prop_fc_4: 0.0221s
test_prop_fc_0: 0.0109s
test_prop_fc_1: 0.7842s
test_prop_fc_2: 1.2261s
test_prop_fc_3: 0.0019s
test_prop_fc_4: 1.3040s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0019s
test_prop_GAC_2: 0.0033s
test_prop_GAC_3: 0.0019s
test_prop_GAC_4: 0.0033s
test_prop_GAC_5: 0.0404s
test_prop_GAC_6: 0.2073s
test_prop_GAC_7: 0.0503s
test_prop_GAC_8: 1.2869s
test_prop_GAC_9: 1.0315s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.0/0.25
CAGEY: 0.0/0.5

TOTAL: 2.0/2.75
Code quality: ?/0.25

Running time: 2024_02_02-15:38:48

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


----------------------------------------------------------------------
Ran 44 tests in 6.035s

FAILED (failures=6, errors=1)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0012s
test_bne_grid_2: 0.0012s
test_bne_grid_3: 0.0050s
test_bne_grid_4: 0.0129s
test_bne_grid_5: 0.0428s
test_nary_grid_1: 0.0005s
test_nary_grid_2: 0.0017s
test_nary_grid_3: 0.0119s
test_nary_grid_4: 0.1410s
test_bin_prop_fc_0: 0.0028s
test_bin_prop_fc_1: 0.0096s
test_bin_prop_fc_2: 0.0113s
test_bin_prop_fc_3: 0.0177s
test_bin_prop_fc_4: 0.0171s
test_prop_fc_0: 0.0098s
test_prop_fc_1: 0.8342s
test_prop_fc_2: 1.2230s
test_prop_fc_3: 0.0016s
test_prop_fc_4: 1.1866s
test_prop_GAC_0: 0.0010s
test_prop_GAC_1: 0.0028s
test_prop_GAC_2: 0.0046s
test_prop_GAC_3: 0.0024s
test_prop_GAC_4: 0.0036s
test_prop_GAC_5: 0.0397s
test_prop_GAC_6: 0.2422s
test_prop_GAC_7: 0.0500s
test_prop_GAC_8: 1.1907s
test_prop_GAC_9: 0.9360s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.0/0.5

TOTAL: 2.25/2.75
Code quality: ?/0.25

Running time: 2024_02_02-15:47:18

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}

Encoded incorrect constraint:
 {('-', 1, 1, 2, 2): True, ('-', 1, 2, 1, 2): True, ('-', 1, 2, 2, 1): True, ('-', 2, 2, 2, 2): True}
Input board: (2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}
Input board: (3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


Encoded incorrect constraint:
 {('-', 1, 1, 1, 1, 2, 3): True, ('-', 1, 1, 1, 1, 3, 2): True, ('-', 1, 1, 1, 2, 1, 3): True, ('-', 1, 1, 1, 2, 2, 2): True, ('-', 1, 1, 1, 2, 3, 1): True, ('-', 1, 1, 1, 3, 1, 2): True, ('-', 1, 1, 1, 3, 2, 1): True, ('-', 1, 1, 2, 1, 1, 3): True, ('-', 1, 1, 2, 1, 2, 2): True, ('-', 1, 1, 2, 1, 3, 1): True, ('-', 1, 1, 2, 2, 1, 2): True, ('-', 1, 1, 2, 2, 2, 1): True, ('-', 1, 1, 2, 3, 1, 1): True, ('-', 1, 1, 3, 1, 1, 2): True, ('-', 1, 1, 3, 1, 2, 1): True, ('-', 1, 1, 3, 2, 1, 1): True, ('-', 1, 2, 1, 1, 1, 3): True, ('-', 1, 2, 1, 1, 2, 2): True, ('-', 1, 2, 1, 1, 3, 1): True, ('-', 1, 2, 1, 2, 1, 2): True, ('-', 1, 2, 1, 2, 2, 1): True, ('-', 1, 2, 1, 3, 1, 1): True, ('-', 1, 2, 2, 1, 1, 2): True, ('-', 1, 2, 2, 1, 2, 1): True, ('-', 1, 2, 2, 2, 1, 1): True, ('-', 1, 2, 3, 1, 1, 1): True, ('-', 1, 3, 1, 1, 1, 2): True, ('-', 1, 3, 1, 1, 2, 1): True, ('-', 1, 3, 1, 2, 1, 1): True, ('-', 1, 3, 2, 1, 1, 1): True, ('-', 2, 1, 1, 1, 3, 3): True, ('-', 2, 1, 1, 2, 2, 3): True, ('-', 2, 1, 1, 2, 3, 2): True, ('-', 2, 1, 1, 3, 1, 3): True, ('-', 2, 1, 1, 3, 2, 2): True, ('-', 2, 1, 1, 3, 3, 1): True, ('-', 2, 1, 2, 1, 2, 3): True, ('-', 2, 1, 2, 1, 3, 2): True, ('-', 2, 1, 2, 2, 1, 3): True, ('-', 2, 1, 2, 2, 2, 2): True, ('-', 2, 1, 2, 2, 3, 1): True, ('-', 2, 1, 2, 3, 1, 2): True, ('-', 2, 1, 2, 3, 2, 1): True, ('-', 2, 1, 3, 1, 1, 3): True, ('-', 2, 1, 3, 1, 2, 2): True, ('-', 2, 1, 3, 1, 3, 1): True, ('-', 2, 1, 3, 2, 1, 2): True, ('-', 2, 1, 3, 2, 2, 1): True, ('-', 2, 1, 3, 3, 1, 1): True, ('-', 2, 2, 1, 1, 2, 3): True, ('-', 2, 2, 1, 1, 3, 2): True, ('-', 2, 2, 1, 2, 1, 3): True, ('-', 2, 2, 1, 2, 2, 2): True, ('-', 2, 2, 1, 2, 3, 1): True, ('-', 2, 2, 1, 3, 1, 2): True, ('-', 2, 2, 1, 3, 2, 1): True, ('-', 2, 2, 2, 1, 1, 3): True, ('-', 2, 2, 2, 1, 2, 2): True, ('-', 2, 2, 2, 1, 3, 1): True, ('-', 2, 2, 2, 2, 1, 2): True, ('-', 2, 2, 2, 2, 2, 1): True, ('-', 2, 2, 2, 3, 1, 1): True, ('-', 2, 2, 3, 1, 1, 2): True, ('-', 2, 2, 3, 1, 2, 1): True, ('-', 2, 2, 3, 2, 1, 1): True, ('-', 2, 3, 1, 1, 1, 3): True, ('-', 2, 3, 1, 1, 2, 2): True, ('-', 2, 3, 1, 1, 3, 1): True, ('-', 2, 3, 1, 2, 1, 2): True, ('-', 2, 3, 1, 2, 2, 1): True, ('-', 2, 3, 1, 3, 1, 1): True, ('-', 2, 3, 2, 1, 1, 2): True, ('-', 2, 3, 2, 1, 2, 1): True, ('-', 2, 3, 2, 2, 1, 1): True, ('-', 2, 3, 3, 1, 1, 1): True, ('-', 3, 1, 1, 2, 3, 3): True, ('-', 3, 1, 1, 3, 2, 3): True, ('-', 3, 1, 1, 3, 3, 2): True, ('-', 3, 1, 2, 1, 3, 3): True, ('-', 3, 1, 2, 2, 2, 3): True, ('-', 3, 1, 2, 2, 3, 2): True, ('-', 3, 1, 2, 3, 1, 3): True, ('-', 3, 1, 2, 3, 2, 2): True, ('-', 3, 1, 2, 3, 3, 1): True, ('-', 3, 1, 3, 1, 2, 3): True, ('-', 3, 1, 3, 1, 3, 2): True, ('-', 3, 1, 3, 2, 1, 3): True, ('-', 3, 1, 3, 2, 2, 2): True, ('-', 3, 1, 3, 2, 3, 1): True, ('-', 3, 1, 3, 3, 1, 2): True, ('-', 3, 1, 3, 3, 2, 1): True, ('-', 3, 2, 1, 1, 3, 3): True, ('-', 3, 2, 1, 2, 2, 3): True, ('-', 3, 2, 1, 2, 3, 2): True, ('-', 3, 2, 1, 3, 1, 3): True, ('-', 3, 2, 1, 3, 2, 2): True, ('-', 3, 2, 1, 3, 3, 1): True, ('-', 3, 2, 2, 1, 2, 3): True, ('-', 3, 2, 2, 1, 3, 2): True, ('-', 3, 2, 2, 2, 1, 3): True, ('-', 3, 2, 2, 2, 2, 2): True, ('-', 3, 2, 2, 2, 3, 1): True, ('-', 3, 2, 2, 3, 1, 2): True, ('-', 3, 2, 2, 3, 2, 1): True, ('-', 3, 2, 3, 1, 1, 3): True, ('-', 3, 2, 3, 1, 2, 2): True, ('-', 3, 2, 3, 1, 3, 1): True, ('-', 3, 2, 3, 2, 1, 2): True, ('-', 3, 2, 3, 2, 2, 1): True, ('-', 3, 2, 3, 3, 1, 1): True, ('-', 3, 3, 1, 1, 2, 3): True, ('-', 3, 3, 1, 1, 3, 2): True, ('-', 3, 3, 1, 2, 1, 3): True, ('-', 3, 3, 1, 2, 2, 2): True, ('-', 3, 3, 1, 2, 3, 1): True, ('-', 3, 3, 1, 3, 1, 2): True, ('-', 3, 3, 1, 3, 2, 1): True, ('-', 3, 3, 2, 1, 1, 3): True, ('-', 3, 3, 2, 1, 2, 2): True, ('-', 3, 3, 2, 1, 3, 1): True, ('-', 3, 3, 2, 2, 1, 2): True, ('-', 3, 3, 2, 2, 2, 1): True, ('-', 3, 3, 2, 3, 1, 1): True, ('-', 3, 3, 3, 1, 1, 2): True, ('-', 3, 3, 3, 1, 2, 1): True, ('-', 3, 3, 3, 2, 1, 1): True}

----------------------------------------------------------------------
Ran 44 tests in 5.377s

FAILED (failures=2)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0007s
test_bne_grid_2: 0.0005s
test_bne_grid_3: 0.0027s
test_bne_grid_4: 0.0066s
test_bne_grid_5: 0.0198s
test_cages_1: 0.0002s
test_cages_2: 0.0002s
test_cages_3: 0.0002s
test_cages_4: 0.0023s
test_cages_5: 0.0032s
test_cages_6: 0.0018s
test_nary_grid_1: 0.0004s
test_nary_grid_2: 0.0010s
test_nary_grid_3: 0.0063s
test_nary_grid_4: 0.0529s
test_bin_prop_fc_0: 0.0008s
test_bin_prop_fc_1: 0.0028s
test_bin_prop_fc_2: 0.0030s
test_bin_prop_fc_3: 0.0030s
test_bin_prop_fc_4: 0.0034s
test_prop_fc_0: 0.0015s
test_prop_fc_1: 0.6322s
test_prop_fc_2: 1.1319s
test_prop_fc_3: 0.0018s
test_prop_fc_4: 1.0791s
test_prop_GAC_0: 0.0009s
test_prop_GAC_1: 0.0020s
test_prop_GAC_2: 0.0034s
test_prop_GAC_3: 0.0020s
test_prop_GAC_4: 0.0035s
test_prop_GAC_5: 0.0409s
test_prop_GAC_6: 0.2427s
test_prop_GAC_7: 0.0505s
test_prop_GAC_8: 1.1782s
test_prop_GAC_9: 0.8792s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.375/0.5

TOTAL: 2.625/2.75
Code quality: ?/0.25

Running time: 2024_02_02-18:55:12

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}

Encoded incorrect constraint:
 {('-', 1, 1, 2, 2): True, ('-', 1, 2, 1, 2): True, ('-', 1, 2, 2, 1): True, ('-', 2, 2, 2, 2): True}
Input board: (2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}
Input board: (3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


Encoded incorrect constraint:
 {('-', 1, 1, 1, 1, 2, 3): True, ('-', 1, 1, 1, 1, 3, 2): True, ('-', 1, 1, 1, 2, 1, 3): True, ('-', 1, 1, 1, 2, 2, 2): True, ('-', 1, 1, 1, 2, 3, 1): True, ('-', 1, 1, 1, 3, 1, 2): True, ('-', 1, 1, 1, 3, 2, 1): True, ('-', 1, 1, 2, 1, 1, 3): True, ('-', 1, 1, 2, 1, 2, 2): True, ('-', 1, 1, 2, 1, 3, 1): True, ('-', 1, 1, 2, 2, 1, 2): True, ('-', 1, 1, 2, 2, 2, 1): True, ('-', 1, 1, 2, 3, 1, 1): True, ('-', 1, 1, 3, 1, 1, 2): True, ('-', 1, 1, 3, 1, 2, 1): True, ('-', 1, 1, 3, 2, 1, 1): True, ('-', 1, 2, 1, 1, 1, 3): True, ('-', 1, 2, 1, 1, 2, 2): True, ('-', 1, 2, 1, 1, 3, 1): True, ('-', 1, 2, 1, 2, 1, 2): True, ('-', 1, 2, 1, 2, 2, 1): True, ('-', 1, 2, 1, 3, 1, 1): True, ('-', 1, 2, 2, 1, 1, 2): True, ('-', 1, 2, 2, 1, 2, 1): True, ('-', 1, 2, 2, 2, 1, 1): True, ('-', 1, 2, 3, 1, 1, 1): True, ('-', 1, 3, 1, 1, 1, 2): True, ('-', 1, 3, 1, 1, 2, 1): True, ('-', 1, 3, 1, 2, 1, 1): True, ('-', 1, 3, 2, 1, 1, 1): True, ('-', 2, 1, 1, 1, 3, 3): True, ('-', 2, 1, 1, 2, 2, 3): True, ('-', 2, 1, 1, 2, 3, 2): True, ('-', 2, 1, 1, 3, 1, 3): True, ('-', 2, 1, 1, 3, 2, 2): True, ('-', 2, 1, 1, 3, 3, 1): True, ('-', 2, 1, 2, 1, 2, 3): True, ('-', 2, 1, 2, 1, 3, 2): True, ('-', 2, 1, 2, 2, 1, 3): True, ('-', 2, 1, 2, 2, 2, 2): True, ('-', 2, 1, 2, 2, 3, 1): True, ('-', 2, 1, 2, 3, 1, 2): True, ('-', 2, 1, 2, 3, 2, 1): True, ('-', 2, 1, 3, 1, 1, 3): True, ('-', 2, 1, 3, 1, 2, 2): True, ('-', 2, 1, 3, 1, 3, 1): True, ('-', 2, 1, 3, 2, 1, 2): True, ('-', 2, 1, 3, 2, 2, 1): True, ('-', 2, 1, 3, 3, 1, 1): True, ('-', 2, 2, 1, 1, 2, 3): True, ('-', 2, 2, 1, 1, 3, 2): True, ('-', 2, 2, 1, 2, 1, 3): True, ('-', 2, 2, 1, 2, 2, 2): True, ('-', 2, 2, 1, 2, 3, 1): True, ('-', 2, 2, 1, 3, 1, 2): True, ('-', 2, 2, 1, 3, 2, 1): True, ('-', 2, 2, 2, 1, 1, 3): True, ('-', 2, 2, 2, 1, 2, 2): True, ('-', 2, 2, 2, 1, 3, 1): True, ('-', 2, 2, 2, 2, 1, 2): True, ('-', 2, 2, 2, 2, 2, 1): True, ('-', 2, 2, 2, 3, 1, 1): True, ('-', 2, 2, 3, 1, 1, 2): True, ('-', 2, 2, 3, 1, 2, 1): True, ('-', 2, 2, 3, 2, 1, 1): True, ('-', 2, 3, 1, 1, 1, 3): True, ('-', 2, 3, 1, 1, 2, 2): True, ('-', 2, 3, 1, 1, 3, 1): True, ('-', 2, 3, 1, 2, 1, 2): True, ('-', 2, 3, 1, 2, 2, 1): True, ('-', 2, 3, 1, 3, 1, 1): True, ('-', 2, 3, 2, 1, 1, 2): True, ('-', 2, 3, 2, 1, 2, 1): True, ('-', 2, 3, 2, 2, 1, 1): True, ('-', 2, 3, 3, 1, 1, 1): True, ('-', 3, 1, 1, 2, 3, 3): True, ('-', 3, 1, 1, 3, 2, 3): True, ('-', 3, 1, 1, 3, 3, 2): True, ('-', 3, 1, 2, 1, 3, 3): True, ('-', 3, 1, 2, 2, 2, 3): True, ('-', 3, 1, 2, 2, 3, 2): True, ('-', 3, 1, 2, 3, 1, 3): True, ('-', 3, 1, 2, 3, 2, 2): True, ('-', 3, 1, 2, 3, 3, 1): True, ('-', 3, 1, 3, 1, 2, 3): True, ('-', 3, 1, 3, 1, 3, 2): True, ('-', 3, 1, 3, 2, 1, 3): True, ('-', 3, 1, 3, 2, 2, 2): True, ('-', 3, 1, 3, 2, 3, 1): True, ('-', 3, 1, 3, 3, 1, 2): True, ('-', 3, 1, 3, 3, 2, 1): True, ('-', 3, 2, 1, 1, 3, 3): True, ('-', 3, 2, 1, 2, 2, 3): True, ('-', 3, 2, 1, 2, 3, 2): True, ('-', 3, 2, 1, 3, 1, 3): True, ('-', 3, 2, 1, 3, 2, 2): True, ('-', 3, 2, 1, 3, 3, 1): True, ('-', 3, 2, 2, 1, 2, 3): True, ('-', 3, 2, 2, 1, 3, 2): True, ('-', 3, 2, 2, 2, 1, 3): True, ('-', 3, 2, 2, 2, 2, 2): True, ('-', 3, 2, 2, 2, 3, 1): True, ('-', 3, 2, 2, 3, 1, 2): True, ('-', 3, 2, 2, 3, 2, 1): True, ('-', 3, 2, 3, 1, 1, 3): True, ('-', 3, 2, 3, 1, 2, 2): True, ('-', 3, 2, 3, 1, 3, 1): True, ('-', 3, 2, 3, 2, 1, 2): True, ('-', 3, 2, 3, 2, 2, 1): True, ('-', 3, 2, 3, 3, 1, 1): True, ('-', 3, 3, 1, 1, 2, 3): True, ('-', 3, 3, 1, 1, 3, 2): True, ('-', 3, 3, 1, 2, 1, 3): True, ('-', 3, 3, 1, 2, 2, 2): True, ('-', 3, 3, 1, 2, 3, 1): True, ('-', 3, 3, 1, 3, 1, 2): True, ('-', 3, 3, 1, 3, 2, 1): True, ('-', 3, 3, 2, 1, 1, 3): True, ('-', 3, 3, 2, 1, 2, 2): True, ('-', 3, 3, 2, 1, 3, 1): True, ('-', 3, 3, 2, 2, 1, 2): True, ('-', 3, 3, 2, 2, 2, 1): True, ('-', 3, 3, 2, 3, 1, 1): True, ('-', 3, 3, 3, 1, 1, 2): True, ('-', 3, 3, 3, 1, 2, 1): True, ('-', 3, 3, 3, 2, 1, 1): True}

----------------------------------------------------------------------
Ran 44 tests in 4.166s

FAILED (failures=2)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0007s
test_bne_grid_2: 0.0004s
test_bne_grid_3: 0.0015s
test_bne_grid_4: 0.0055s
test_bne_grid_5: 0.0159s
test_cages_1: 0.0002s
test_cages_2: 0.0002s
test_cages_3: 0.0002s
test_cages_4: 0.0020s
test_cages_5: 0.0028s
test_cages_6: 0.0020s
test_nary_grid_1: 0.0003s
test_nary_grid_2: 0.0009s
test_nary_grid_3: 0.0063s
test_nary_grid_4: 0.0439s
test_bin_prop_fc_0: 0.0008s
test_bin_prop_fc_1: 0.0027s
test_bin_prop_fc_2: 0.0053s
test_bin_prop_fc_3: 0.0025s
test_bin_prop_fc_4: 0.0031s
test_prop_fc_0: 0.0014s
test_prop_fc_1: 0.4955s
test_prop_fc_2: 0.8708s
test_prop_fc_3: 0.0013s
test_prop_fc_4: 0.8629s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0020s
test_prop_GAC_2: 0.0027s
test_prop_GAC_3: 0.0022s
test_prop_GAC_4: 0.0026s
test_prop_GAC_5: 0.0313s
test_prop_GAC_6: 0.1626s
test_prop_GAC_7: 0.0390s
test_prop_GAC_8: 0.8937s
test_prop_GAC_9: 0.6825s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.375/0.5

TOTAL: 2.625/2.75
Code quality: ?/0.25

Running time: 2024_02_02-19:07:54

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


----------------------------------------------------------------------
Ran 44 tests in 4.155s

FAILED (failures=6, errors=1)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0004s
test_bne_grid_2: 0.0004s
test_bne_grid_3: 0.0024s
test_bne_grid_4: 0.0049s
test_bne_grid_5: 0.0182s
test_nary_grid_1: 0.0002s
test_nary_grid_2: 0.0007s
test_nary_grid_3: 0.0049s
test_nary_grid_4: 0.0444s
test_bin_prop_fc_0: 0.0007s
test_bin_prop_fc_1: 0.0022s
test_bin_prop_fc_2: 0.0021s
test_bin_prop_fc_3: 0.0025s
test_bin_prop_fc_4: 0.0036s
test_prop_fc_0: 0.0013s
test_prop_fc_1: 0.4893s
test_prop_fc_2: 0.8735s
test_prop_fc_3: 0.0013s
test_prop_fc_4: 0.8533s
test_prop_GAC_0: 0.0006s
test_prop_GAC_1: 0.0015s
test_prop_GAC_2: 0.0027s
test_prop_GAC_3: 0.0023s
test_prop_GAC_4: 0.0026s
test_prop_GAC_5: 0.0312s
test_prop_GAC_6: 0.1652s
test_prop_GAC_7: 0.0400s
test_prop_GAC_8: 0.8965s
test_prop_GAC_9: 0.6860s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.0/0.5

TOTAL: 2.25/2.75
Code quality: ?/0.25

Running time: 2024_02_02-19:18:43

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... ERROR
test_cages_2 (__main__.TestCageConstraints) ... ERROR
test_cages_3 (__main__.TestCageConstraints) ... ERROR
test_cages_4 (__main__.TestCageConstraints) ... ERROR
test_cages_5 (__main__.TestCageConstraints) ... ERROR
test_cages_6 (__main__.TestCageConstraints) ... ERROR
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 622, in test_cage_existence
    if v.name == correct:
AttributeError: 'list' object has no attribute 'name'

======================================================================
ERROR: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 659, in test_cages_1
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 733, in test_cages_2
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 808, in test_cages_3
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 882, in test_cages_4
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 956, in test_cages_5
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 1030, in test_cages_6
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

----------------------------------------------------------------------
Ran 44 tests in 4.142s

FAILED (errors=7)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0009s
test_bne_grid_2: 0.0004s
test_bne_grid_3: 0.0022s
test_bne_grid_4: 0.0055s
test_bne_grid_5: 0.0158s
test_nary_grid_1: 0.0004s
test_nary_grid_2: 0.0008s
test_nary_grid_3: 0.0047s
test_nary_grid_4: 0.0557s
test_bin_prop_fc_0: 0.0007s
test_bin_prop_fc_1: 0.0021s
test_bin_prop_fc_2: 0.0021s
test_bin_prop_fc_3: 0.0023s
test_bin_prop_fc_4: 0.0028s
test_prop_fc_0: 0.0021s
test_prop_fc_1: 0.4652s
test_prop_fc_2: 0.8731s
test_prop_fc_3: 0.0013s
test_prop_fc_4: 0.8752s
test_prop_GAC_0: 0.0006s
test_prop_GAC_1: 0.0015s
test_prop_GAC_2: 0.0027s
test_prop_GAC_3: 0.0025s
test_prop_GAC_4: 0.0025s
test_prop_GAC_5: 0.0320s
test_prop_GAC_6: 0.1575s
test_prop_GAC_7: 0.0402s
test_prop_GAC_8: 0.8870s
test_prop_GAC_9: 0.6815s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.0/0.5

TOTAL: 2.25/2.75
Code quality: ?/0.25

Running time: 2024_02_02-19:19:21

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}

Encoded incorrect constraint:
 {('-', 1, 1, 2, 2): True, ('-', 1, 2, 1, 2): True, ('-', 1, 2, 2, 1): True, ('-', 2, 2, 2, 2): True}
Input board: (2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}
Input board: (3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


Encoded incorrect constraint:
 {('-', 1, 1, 1, 1, 2, 3): True, ('-', 1, 1, 1, 1, 3, 2): True, ('-', 1, 1, 1, 2, 1, 3): True, ('-', 1, 1, 1, 2, 2, 2): True, ('-', 1, 1, 1, 2, 3, 1): True, ('-', 1, 1, 1, 3, 1, 2): True, ('-', 1, 1, 1, 3, 2, 1): True, ('-', 1, 1, 2, 1, 1, 3): True, ('-', 1, 1, 2, 1, 2, 2): True, ('-', 1, 1, 2, 1, 3, 1): True, ('-', 1, 1, 2, 2, 1, 2): True, ('-', 1, 1, 2, 2, 2, 1): True, ('-', 1, 1, 2, 3, 1, 1): True, ('-', 1, 1, 3, 1, 1, 2): True, ('-', 1, 1, 3, 1, 2, 1): True, ('-', 1, 1, 3, 2, 1, 1): True, ('-', 1, 2, 1, 1, 1, 3): True, ('-', 1, 2, 1, 1, 2, 2): True, ('-', 1, 2, 1, 1, 3, 1): True, ('-', 1, 2, 1, 2, 1, 2): True, ('-', 1, 2, 1, 2, 2, 1): True, ('-', 1, 2, 1, 3, 1, 1): True, ('-', 1, 2, 2, 1, 1, 2): True, ('-', 1, 2, 2, 1, 2, 1): True, ('-', 1, 2, 2, 2, 1, 1): True, ('-', 1, 2, 3, 1, 1, 1): True, ('-', 1, 3, 1, 1, 1, 2): True, ('-', 1, 3, 1, 1, 2, 1): True, ('-', 1, 3, 1, 2, 1, 1): True, ('-', 1, 3, 2, 1, 1, 1): True, ('-', 2, 1, 1, 1, 3, 3): True, ('-', 2, 1, 1, 2, 2, 3): True, ('-', 2, 1, 1, 2, 3, 2): True, ('-', 2, 1, 1, 3, 1, 3): True, ('-', 2, 1, 1, 3, 2, 2): True, ('-', 2, 1, 1, 3, 3, 1): True, ('-', 2, 1, 2, 1, 2, 3): True, ('-', 2, 1, 2, 1, 3, 2): True, ('-', 2, 1, 2, 2, 1, 3): True, ('-', 2, 1, 2, 2, 2, 2): True, ('-', 2, 1, 2, 2, 3, 1): True, ('-', 2, 1, 2, 3, 1, 2): True, ('-', 2, 1, 2, 3, 2, 1): True, ('-', 2, 1, 3, 1, 1, 3): True, ('-', 2, 1, 3, 1, 2, 2): True, ('-', 2, 1, 3, 1, 3, 1): True, ('-', 2, 1, 3, 2, 1, 2): True, ('-', 2, 1, 3, 2, 2, 1): True, ('-', 2, 1, 3, 3, 1, 1): True, ('-', 2, 2, 1, 1, 2, 3): True, ('-', 2, 2, 1, 1, 3, 2): True, ('-', 2, 2, 1, 2, 1, 3): True, ('-', 2, 2, 1, 2, 2, 2): True, ('-', 2, 2, 1, 2, 3, 1): True, ('-', 2, 2, 1, 3, 1, 2): True, ('-', 2, 2, 1, 3, 2, 1): True, ('-', 2, 2, 2, 1, 1, 3): True, ('-', 2, 2, 2, 1, 2, 2): True, ('-', 2, 2, 2, 1, 3, 1): True, ('-', 2, 2, 2, 2, 1, 2): True, ('-', 2, 2, 2, 2, 2, 1): True, ('-', 2, 2, 2, 3, 1, 1): True, ('-', 2, 2, 3, 1, 1, 2): True, ('-', 2, 2, 3, 1, 2, 1): True, ('-', 2, 2, 3, 2, 1, 1): True, ('-', 2, 3, 1, 1, 1, 3): True, ('-', 2, 3, 1, 1, 2, 2): True, ('-', 2, 3, 1, 1, 3, 1): True, ('-', 2, 3, 1, 2, 1, 2): True, ('-', 2, 3, 1, 2, 2, 1): True, ('-', 2, 3, 1, 3, 1, 1): True, ('-', 2, 3, 2, 1, 1, 2): True, ('-', 2, 3, 2, 1, 2, 1): True, ('-', 2, 3, 2, 2, 1, 1): True, ('-', 2, 3, 3, 1, 1, 1): True, ('-', 3, 1, 1, 2, 3, 3): True, ('-', 3, 1, 1, 3, 2, 3): True, ('-', 3, 1, 1, 3, 3, 2): True, ('-', 3, 1, 2, 1, 3, 3): True, ('-', 3, 1, 2, 2, 2, 3): True, ('-', 3, 1, 2, 2, 3, 2): True, ('-', 3, 1, 2, 3, 1, 3): True, ('-', 3, 1, 2, 3, 2, 2): True, ('-', 3, 1, 2, 3, 3, 1): True, ('-', 3, 1, 3, 1, 2, 3): True, ('-', 3, 1, 3, 1, 3, 2): True, ('-', 3, 1, 3, 2, 1, 3): True, ('-', 3, 1, 3, 2, 2, 2): True, ('-', 3, 1, 3, 2, 3, 1): True, ('-', 3, 1, 3, 3, 1, 2): True, ('-', 3, 1, 3, 3, 2, 1): True, ('-', 3, 2, 1, 1, 3, 3): True, ('-', 3, 2, 1, 2, 2, 3): True, ('-', 3, 2, 1, 2, 3, 2): True, ('-', 3, 2, 1, 3, 1, 3): True, ('-', 3, 2, 1, 3, 2, 2): True, ('-', 3, 2, 1, 3, 3, 1): True, ('-', 3, 2, 2, 1, 2, 3): True, ('-', 3, 2, 2, 1, 3, 2): True, ('-', 3, 2, 2, 2, 1, 3): True, ('-', 3, 2, 2, 2, 2, 2): True, ('-', 3, 2, 2, 2, 3, 1): True, ('-', 3, 2, 2, 3, 1, 2): True, ('-', 3, 2, 2, 3, 2, 1): True, ('-', 3, 2, 3, 1, 1, 3): True, ('-', 3, 2, 3, 1, 2, 2): True, ('-', 3, 2, 3, 1, 3, 1): True, ('-', 3, 2, 3, 2, 1, 2): True, ('-', 3, 2, 3, 2, 2, 1): True, ('-', 3, 2, 3, 3, 1, 1): True, ('-', 3, 3, 1, 1, 2, 3): True, ('-', 3, 3, 1, 1, 3, 2): True, ('-', 3, 3, 1, 2, 1, 3): True, ('-', 3, 3, 1, 2, 2, 2): True, ('-', 3, 3, 1, 2, 3, 1): True, ('-', 3, 3, 1, 3, 1, 2): True, ('-', 3, 3, 1, 3, 2, 1): True, ('-', 3, 3, 2, 1, 1, 3): True, ('-', 3, 3, 2, 1, 2, 2): True, ('-', 3, 3, 2, 1, 3, 1): True, ('-', 3, 3, 2, 2, 1, 2): True, ('-', 3, 3, 2, 2, 2, 1): True, ('-', 3, 3, 2, 3, 1, 1): True, ('-', 3, 3, 3, 1, 1, 2): True, ('-', 3, 3, 3, 1, 2, 1): True, ('-', 3, 3, 3, 2, 1, 1): True}

----------------------------------------------------------------------
Ran 44 tests in 4.356s

FAILED (failures=2)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0005s
test_bne_grid_2: 0.0004s
test_bne_grid_3: 0.0021s
test_bne_grid_4: 0.0065s
test_bne_grid_5: 0.0145s
test_cages_1: 0.0002s
test_cages_2: 0.0002s
test_cages_3: 0.0002s
test_cages_4: 0.0021s
test_cages_5: 0.0024s
test_cages_6: 0.0026s
test_nary_grid_1: 0.0004s
test_nary_grid_2: 0.0011s
test_nary_grid_3: 0.0052s
test_nary_grid_4: 0.0416s
test_bin_prop_fc_0: 0.0006s
test_bin_prop_fc_1: 0.0022s
test_bin_prop_fc_2: 0.0029s
test_bin_prop_fc_3: 0.0025s
test_bin_prop_fc_4: 0.0038s
test_prop_fc_0: 0.0019s
test_prop_fc_1: 0.4987s
test_prop_fc_2: 0.9125s
test_prop_fc_3: 0.0014s
test_prop_fc_4: 0.8687s
test_prop_GAC_0: 0.0006s
test_prop_GAC_1: 0.0017s
test_prop_GAC_2: 0.0031s
test_prop_GAC_3: 0.0025s
test_prop_GAC_4: 0.0027s
test_prop_GAC_5: 0.0336s
test_prop_GAC_6: 0.1780s
test_prop_GAC_7: 0.0455s
test_prop_GAC_8: 0.9626s
test_prop_GAC_9: 0.7328s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.375/0.5

TOTAL: 2.625/2.75
Code quality: ?/0.25

Running time: 2024_02_02-19:19:41

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
TypeError: cannot unpack non-iterable NoneType object

======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "cannot unpack non-iterable NoneType object". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


----------------------------------------------------------------------
Ran 44 tests in 4.121s

FAILED (failures=6, errors=1)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0005s
test_bne_grid_2: 0.0004s
test_bne_grid_3: 0.0022s
test_bne_grid_4: 0.0051s
test_bne_grid_5: 0.0180s
test_nary_grid_1: 0.0003s
test_nary_grid_2: 0.0013s
test_nary_grid_3: 0.0050s
test_nary_grid_4: 0.0430s
test_bin_prop_fc_0: 0.0011s
test_bin_prop_fc_1: 0.0029s
test_bin_prop_fc_2: 0.0021s
test_bin_prop_fc_3: 0.0024s
test_bin_prop_fc_4: 0.0021s
test_prop_fc_0: 0.0010s
test_prop_fc_1: 0.4758s
test_prop_fc_2: 0.8656s
test_prop_fc_3: 0.0013s
test_prop_fc_4: 0.8493s
test_prop_GAC_0: 0.0006s
test_prop_GAC_1: 0.0017s
test_prop_GAC_2: 0.0028s
test_prop_GAC_3: 0.0023s
test_prop_GAC_4: 0.0031s
test_prop_GAC_5: 0.0327s
test_prop_GAC_6: 0.1616s
test_prop_GAC_7: 0.0418s
test_prop_GAC_8: 0.8863s
test_prop_GAC_9: 0.6852s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.0/0.5

TOTAL: 2.25/2.75
Code quality: ?/0.25

Running time: 2024_02_02-19:32:18

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... ERROR
test_cages_2 (__main__.TestCageConstraints) ... ERROR
test_cages_3 (__main__.TestCageConstraints) ... ERROR
test_cages_4 (__main__.TestCageConstraints) ... ERROR
test_cages_5 (__main__.TestCageConstraints) ... ERROR
test_cages_6 (__main__.TestCageConstraints) ... ERROR
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 622, in test_cage_existence
    if v.name == correct:
AttributeError: 'list' object has no attribute 'name'

======================================================================
ERROR: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 659, in test_cages_1
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 733, in test_cages_2
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 808, in test_cages_3
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 882, in test_cages_4
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 956, in test_cages_5
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 1030, in test_cages_6
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

----------------------------------------------------------------------
Ran 44 tests in 4.189s

FAILED (errors=7)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0005s
test_bne_grid_2: 0.0004s
test_bne_grid_3: 0.0023s
test_bne_grid_4: 0.0051s
test_bne_grid_5: 0.0181s
test_nary_grid_1: 0.0004s
test_nary_grid_2: 0.0010s
test_nary_grid_3: 0.0055s
test_nary_grid_4: 0.0430s
test_bin_prop_fc_0: 0.0009s
test_bin_prop_fc_1: 0.0028s
test_bin_prop_fc_2: 0.0021s
test_bin_prop_fc_3: 0.0024s
test_bin_prop_fc_4: 0.0021s
test_prop_fc_0: 0.0010s
test_prop_fc_1: 0.4669s
test_prop_fc_2: 0.8815s
test_prop_fc_3: 0.0016s
test_prop_fc_4: 0.8582s
test_prop_GAC_0: 0.0006s
test_prop_GAC_1: 0.0015s
test_prop_GAC_2: 0.0029s
test_prop_GAC_3: 0.0024s
test_prop_GAC_4: 0.0029s
test_prop_GAC_5: 0.0303s
test_prop_GAC_6: 0.1685s
test_prop_GAC_7: 0.0490s
test_prop_GAC_8: 0.9309s
test_prop_GAC_9: 0.6804s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.0/0.5

TOTAL: 2.25/2.75
Code quality: ?/0.25

Running time: 2024_02_02-19:33:24

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... ERROR
test_cages_2 (__main__.TestCageConstraints) ... ERROR
test_cages_3 (__main__.TestCageConstraints) ... ERROR
test_cages_4 (__main__.TestCageConstraints) ... ERROR
test_cages_5 (__main__.TestCageConstraints) ... ERROR
test_cages_6 (__main__.TestCageConstraints) ... ERROR
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 622, in test_cage_existence
    if v.name == correct:
AttributeError: 'list' object has no attribute 'name'

======================================================================
ERROR: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 659, in test_cages_1
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 733, in test_cages_2
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 808, in test_cages_3
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 882, in test_cages_4
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 956, in test_cages_5
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

======================================================================
ERROR: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 1030, in test_cages_6
    if not isinstance(guess[0].scope[0].dom[0], str):
IndexError: list index out of range

----------------------------------------------------------------------
Ran 44 tests in 4.212s

FAILED (errors=7)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0005s
test_bne_grid_2: 0.0004s
test_bne_grid_3: 0.0021s
test_bne_grid_4: 0.0057s
test_bne_grid_5: 0.0175s
test_nary_grid_1: 0.0003s
test_nary_grid_2: 0.0010s
test_nary_grid_3: 0.0054s
test_nary_grid_4: 0.0428s
test_bin_prop_fc_0: 0.0006s
test_bin_prop_fc_1: 0.0033s
test_bin_prop_fc_2: 0.0032s
test_bin_prop_fc_3: 0.0024s
test_bin_prop_fc_4: 0.0021s
test_prop_fc_0: 0.0010s
test_prop_fc_1: 0.4787s
test_prop_fc_2: 0.8918s
test_prop_fc_3: 0.0014s
test_prop_fc_4: 0.8986s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0018s
test_prop_GAC_2: 0.0029s
test_prop_GAC_3: 0.0024s
test_prop_GAC_4: 0.0027s
test_prop_GAC_5: 0.0345s
test_prop_GAC_6: 0.1620s
test_prop_GAC_7: 0.0398s
test_prop_GAC_8: 0.8891s
test_prop_GAC_9: 0.6967s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.0/0.5

TOTAL: 2.25/2.75
Code quality: ?/0.25

Running time: 2024_02_02-19:33:42

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ERROR
test_cages_1 (__main__.TestCageConstraints) ... FAIL
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... FAIL
test_cages_4 (__main__.TestCageConstraints) ... FAIL
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... FAIL
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
ERROR: test_cage_existence (__main__.TestCageConstraints)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "autograder_stu.py", line 616, in test_cage_existence
    csp, var_array = cagey_csp_model(board)
ValueError: too many values to unpack (expected 2)

======================================================================
FAIL: test_cages_1 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "not enough values to unpack (expected 2, got 1)". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '+')])


======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "not enough values to unpack (expected 2, got 0)". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_3 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "too many values to unpack (expected 2)". Failed to construct board!
(2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '*')])


======================================================================
FAIL: test_cages_4 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "too many values to unpack (expected 2)". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '+')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "not enough values to unpack (expected 2, got 0)". Failed to construct board!
(3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


======================================================================
FAIL: test_cages_6 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "not enough values to unpack (expected 2, got 0)". Failed to construct board!
(3, [(10, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '*')])


----------------------------------------------------------------------
Ran 44 tests in 4.431s

FAILED (failures=6, errors=1)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0009s
test_bne_grid_2: 0.0004s
test_bne_grid_3: 0.0026s
test_bne_grid_4: 0.0051s
test_bne_grid_5: 0.0164s
test_nary_grid_1: 0.0003s
test_nary_grid_2: 0.0010s
test_nary_grid_3: 0.0060s
test_nary_grid_4: 0.0434s
test_bin_prop_fc_0: 0.0006s
test_bin_prop_fc_1: 0.0021s
test_bin_prop_fc_2: 0.0032s
test_bin_prop_fc_3: 0.0033s
test_bin_prop_fc_4: 0.0024s
test_prop_fc_0: 0.0011s
test_prop_fc_1: 0.4791s
test_prop_fc_2: 0.8926s
test_prop_fc_3: 0.0013s
test_prop_fc_4: 0.8627s
test_prop_GAC_0: 0.0006s
test_prop_GAC_1: 0.0015s
test_prop_GAC_2: 0.0033s
test_prop_GAC_3: 0.0024s
test_prop_GAC_4: 0.0025s
test_prop_GAC_5: 0.0372s
test_prop_GAC_6: 0.2457s
test_prop_GAC_7: 0.0694s
test_prop_GAC_8: 0.9829s
test_prop_GAC_9: 0.7383s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.0/0.5

TOTAL: 2.25/2.75
Code quality: ?/0.25

Running time: 2024_02_02-19:39:33

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}

Encoded incorrect constraint:
 {('-', 1, 1, 2, 2): True, ('-', 1, 2, 1, 2): True, ('-', 1, 2, 2, 1): True, ('-', 2, 2, 2, 2): True}
Input board: (2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}
Input board: (3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


Encoded incorrect constraint:
 {('-', 1, 1, 1, 1, 2, 3): True, ('-', 1, 1, 1, 1, 3, 2): True, ('-', 1, 1, 1, 2, 1, 3): True, ('-', 1, 1, 1, 2, 2, 2): True, ('-', 1, 1, 1, 2, 3, 1): True, ('-', 1, 1, 1, 3, 1, 2): True, ('-', 1, 1, 1, 3, 2, 1): True, ('-', 1, 1, 2, 1, 1, 3): True, ('-', 1, 1, 2, 1, 2, 2): True, ('-', 1, 1, 2, 1, 3, 1): True, ('-', 1, 1, 2, 2, 1, 2): True, ('-', 1, 1, 2, 2, 2, 1): True, ('-', 1, 1, 2, 3, 1, 1): True, ('-', 1, 1, 3, 1, 1, 2): True, ('-', 1, 1, 3, 1, 2, 1): True, ('-', 1, 1, 3, 2, 1, 1): True, ('-', 1, 2, 1, 1, 1, 3): True, ('-', 1, 2, 1, 1, 2, 2): True, ('-', 1, 2, 1, 1, 3, 1): True, ('-', 1, 2, 1, 2, 1, 2): True, ('-', 1, 2, 1, 2, 2, 1): True, ('-', 1, 2, 1, 3, 1, 1): True, ('-', 1, 2, 2, 1, 1, 2): True, ('-', 1, 2, 2, 1, 2, 1): True, ('-', 1, 2, 2, 2, 1, 1): True, ('-', 1, 2, 3, 1, 1, 1): True, ('-', 1, 3, 1, 1, 1, 2): True, ('-', 1, 3, 1, 1, 2, 1): True, ('-', 1, 3, 1, 2, 1, 1): True, ('-', 1, 3, 2, 1, 1, 1): True, ('-', 2, 1, 1, 1, 3, 3): True, ('-', 2, 1, 1, 2, 2, 3): True, ('-', 2, 1, 1, 2, 3, 2): True, ('-', 2, 1, 1, 3, 1, 3): True, ('-', 2, 1, 1, 3, 2, 2): True, ('-', 2, 1, 1, 3, 3, 1): True, ('-', 2, 1, 2, 1, 2, 3): True, ('-', 2, 1, 2, 1, 3, 2): True, ('-', 2, 1, 2, 2, 1, 3): True, ('-', 2, 1, 2, 2, 2, 2): True, ('-', 2, 1, 2, 2, 3, 1): True, ('-', 2, 1, 2, 3, 1, 2): True, ('-', 2, 1, 2, 3, 2, 1): True, ('-', 2, 1, 3, 1, 1, 3): True, ('-', 2, 1, 3, 1, 2, 2): True, ('-', 2, 1, 3, 1, 3, 1): True, ('-', 2, 1, 3, 2, 1, 2): True, ('-', 2, 1, 3, 2, 2, 1): True, ('-', 2, 1, 3, 3, 1, 1): True, ('-', 2, 2, 1, 1, 2, 3): True, ('-', 2, 2, 1, 1, 3, 2): True, ('-', 2, 2, 1, 2, 1, 3): True, ('-', 2, 2, 1, 2, 2, 2): True, ('-', 2, 2, 1, 2, 3, 1): True, ('-', 2, 2, 1, 3, 1, 2): True, ('-', 2, 2, 1, 3, 2, 1): True, ('-', 2, 2, 2, 1, 1, 3): True, ('-', 2, 2, 2, 1, 2, 2): True, ('-', 2, 2, 2, 1, 3, 1): True, ('-', 2, 2, 2, 2, 1, 2): True, ('-', 2, 2, 2, 2, 2, 1): True, ('-', 2, 2, 2, 3, 1, 1): True, ('-', 2, 2, 3, 1, 1, 2): True, ('-', 2, 2, 3, 1, 2, 1): True, ('-', 2, 2, 3, 2, 1, 1): True, ('-', 2, 3, 1, 1, 1, 3): True, ('-', 2, 3, 1, 1, 2, 2): True, ('-', 2, 3, 1, 1, 3, 1): True, ('-', 2, 3, 1, 2, 1, 2): True, ('-', 2, 3, 1, 2, 2, 1): True, ('-', 2, 3, 1, 3, 1, 1): True, ('-', 2, 3, 2, 1, 1, 2): True, ('-', 2, 3, 2, 1, 2, 1): True, ('-', 2, 3, 2, 2, 1, 1): True, ('-', 2, 3, 3, 1, 1, 1): True, ('-', 3, 1, 1, 2, 3, 3): True, ('-', 3, 1, 1, 3, 2, 3): True, ('-', 3, 1, 1, 3, 3, 2): True, ('-', 3, 1, 2, 1, 3, 3): True, ('-', 3, 1, 2, 2, 2, 3): True, ('-', 3, 1, 2, 2, 3, 2): True, ('-', 3, 1, 2, 3, 1, 3): True, ('-', 3, 1, 2, 3, 2, 2): True, ('-', 3, 1, 2, 3, 3, 1): True, ('-', 3, 1, 3, 1, 2, 3): True, ('-', 3, 1, 3, 1, 3, 2): True, ('-', 3, 1, 3, 2, 1, 3): True, ('-', 3, 1, 3, 2, 2, 2): True, ('-', 3, 1, 3, 2, 3, 1): True, ('-', 3, 1, 3, 3, 1, 2): True, ('-', 3, 1, 3, 3, 2, 1): True, ('-', 3, 2, 1, 1, 3, 3): True, ('-', 3, 2, 1, 2, 2, 3): True, ('-', 3, 2, 1, 2, 3, 2): True, ('-', 3, 2, 1, 3, 1, 3): True, ('-', 3, 2, 1, 3, 2, 2): True, ('-', 3, 2, 1, 3, 3, 1): True, ('-', 3, 2, 2, 1, 2, 3): True, ('-', 3, 2, 2, 1, 3, 2): True, ('-', 3, 2, 2, 2, 1, 3): True, ('-', 3, 2, 2, 2, 2, 2): True, ('-', 3, 2, 2, 2, 3, 1): True, ('-', 3, 2, 2, 3, 1, 2): True, ('-', 3, 2, 2, 3, 2, 1): True, ('-', 3, 2, 3, 1, 1, 3): True, ('-', 3, 2, 3, 1, 2, 2): True, ('-', 3, 2, 3, 1, 3, 1): True, ('-', 3, 2, 3, 2, 1, 2): True, ('-', 3, 2, 3, 2, 2, 1): True, ('-', 3, 2, 3, 3, 1, 1): True, ('-', 3, 3, 1, 1, 2, 3): True, ('-', 3, 3, 1, 1, 3, 2): True, ('-', 3, 3, 1, 2, 1, 3): True, ('-', 3, 3, 1, 2, 2, 2): True, ('-', 3, 3, 1, 2, 3, 1): True, ('-', 3, 3, 1, 3, 1, 2): True, ('-', 3, 3, 1, 3, 2, 1): True, ('-', 3, 3, 2, 1, 1, 3): True, ('-', 3, 3, 2, 1, 2, 2): True, ('-', 3, 3, 2, 1, 3, 1): True, ('-', 3, 3, 2, 2, 1, 2): True, ('-', 3, 3, 2, 2, 2, 1): True, ('-', 3, 3, 2, 3, 1, 1): True, ('-', 3, 3, 3, 1, 1, 2): True, ('-', 3, 3, 3, 1, 2, 1): True, ('-', 3, 3, 3, 2, 1, 1): True}

----------------------------------------------------------------------
Ran 44 tests in 4.183s

FAILED (failures=2)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0005s
test_bne_grid_2: 0.0003s
test_bne_grid_3: 0.0023s
test_bne_grid_4: 0.0055s
test_bne_grid_5: 0.0160s
test_cages_1: 0.0002s
test_cages_2: 0.0002s
test_cages_3: 0.0002s
test_cages_4: 0.0022s
test_cages_5: 0.0036s
test_cages_6: 0.0020s
test_nary_grid_1: 0.0002s
test_nary_grid_2: 0.0010s
test_nary_grid_3: 0.0053s
test_nary_grid_4: 0.0435s
test_bin_prop_fc_0: 0.0011s
test_bin_prop_fc_1: 0.0033s
test_bin_prop_fc_2: 0.0028s
test_bin_prop_fc_3: 0.0022s
test_bin_prop_fc_4: 0.0025s
test_prop_fc_0: 0.0010s
test_prop_fc_1: 0.4711s
test_prop_fc_2: 0.8837s
test_prop_fc_3: 0.0014s
test_prop_fc_4: 0.8539s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0021s
test_prop_GAC_2: 0.0039s
test_prop_GAC_3: 0.0023s
test_prop_GAC_4: 0.0028s
test_prop_GAC_5: 0.0340s
test_prop_GAC_6: 0.1600s
test_prop_GAC_7: 0.0420s
test_prop_GAC_8: 0.9105s
test_prop_GAC_9: 0.7021s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.375/0.5

TOTAL: 2.625/2.75
Code quality: ?/0.25

Running time: 2024_02_02-19:53:38

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}

Encoded incorrect constraint:
 {('-', 1, 1, 2, 2): True, ('-', 1, 2, 1, 2): True, ('-', 1, 2, 2, 1): True, ('-', 2, 2, 2, 2): True}
Input board: (2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}
Input board: (3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


Encoded incorrect constraint:
 {('-', 1, 1, 1, 1, 2, 3): True, ('-', 1, 1, 1, 1, 3, 2): True, ('-', 1, 1, 1, 2, 1, 3): True, ('-', 1, 1, 1, 2, 2, 2): True, ('-', 1, 1, 1, 2, 3, 1): True, ('-', 1, 1, 1, 3, 1, 2): True, ('-', 1, 1, 1, 3, 2, 1): True, ('-', 1, 1, 2, 1, 1, 3): True, ('-', 1, 1, 2, 1, 2, 2): True, ('-', 1, 1, 2, 1, 3, 1): True, ('-', 1, 1, 2, 2, 1, 2): True, ('-', 1, 1, 2, 2, 2, 1): True, ('-', 1, 1, 2, 3, 1, 1): True, ('-', 1, 1, 3, 1, 1, 2): True, ('-', 1, 1, 3, 1, 2, 1): True, ('-', 1, 1, 3, 2, 1, 1): True, ('-', 1, 2, 1, 1, 1, 3): True, ('-', 1, 2, 1, 1, 2, 2): True, ('-', 1, 2, 1, 1, 3, 1): True, ('-', 1, 2, 1, 2, 1, 2): True, ('-', 1, 2, 1, 2, 2, 1): True, ('-', 1, 2, 1, 3, 1, 1): True, ('-', 1, 2, 2, 1, 1, 2): True, ('-', 1, 2, 2, 1, 2, 1): True, ('-', 1, 2, 2, 2, 1, 1): True, ('-', 1, 2, 3, 1, 1, 1): True, ('-', 1, 3, 1, 1, 1, 2): True, ('-', 1, 3, 1, 1, 2, 1): True, ('-', 1, 3, 1, 2, 1, 1): True, ('-', 1, 3, 2, 1, 1, 1): True, ('-', 2, 1, 1, 1, 3, 3): True, ('-', 2, 1, 1, 2, 2, 3): True, ('-', 2, 1, 1, 2, 3, 2): True, ('-', 2, 1, 1, 3, 1, 3): True, ('-', 2, 1, 1, 3, 2, 2): True, ('-', 2, 1, 1, 3, 3, 1): True, ('-', 2, 1, 2, 1, 2, 3): True, ('-', 2, 1, 2, 1, 3, 2): True, ('-', 2, 1, 2, 2, 1, 3): True, ('-', 2, 1, 2, 2, 2, 2): True, ('-', 2, 1, 2, 2, 3, 1): True, ('-', 2, 1, 2, 3, 1, 2): True, ('-', 2, 1, 2, 3, 2, 1): True, ('-', 2, 1, 3, 1, 1, 3): True, ('-', 2, 1, 3, 1, 2, 2): True, ('-', 2, 1, 3, 1, 3, 1): True, ('-', 2, 1, 3, 2, 1, 2): True, ('-', 2, 1, 3, 2, 2, 1): True, ('-', 2, 1, 3, 3, 1, 1): True, ('-', 2, 2, 1, 1, 2, 3): True, ('-', 2, 2, 1, 1, 3, 2): True, ('-', 2, 2, 1, 2, 1, 3): True, ('-', 2, 2, 1, 2, 2, 2): True, ('-', 2, 2, 1, 2, 3, 1): True, ('-', 2, 2, 1, 3, 1, 2): True, ('-', 2, 2, 1, 3, 2, 1): True, ('-', 2, 2, 2, 1, 1, 3): True, ('-', 2, 2, 2, 1, 2, 2): True, ('-', 2, 2, 2, 1, 3, 1): True, ('-', 2, 2, 2, 2, 1, 2): True, ('-', 2, 2, 2, 2, 2, 1): True, ('-', 2, 2, 2, 3, 1, 1): True, ('-', 2, 2, 3, 1, 1, 2): True, ('-', 2, 2, 3, 1, 2, 1): True, ('-', 2, 2, 3, 2, 1, 1): True, ('-', 2, 3, 1, 1, 1, 3): True, ('-', 2, 3, 1, 1, 2, 2): True, ('-', 2, 3, 1, 1, 3, 1): True, ('-', 2, 3, 1, 2, 1, 2): True, ('-', 2, 3, 1, 2, 2, 1): True, ('-', 2, 3, 1, 3, 1, 1): True, ('-', 2, 3, 2, 1, 1, 2): True, ('-', 2, 3, 2, 1, 2, 1): True, ('-', 2, 3, 2, 2, 1, 1): True, ('-', 2, 3, 3, 1, 1, 1): True, ('-', 3, 1, 1, 2, 3, 3): True, ('-', 3, 1, 1, 3, 2, 3): True, ('-', 3, 1, 1, 3, 3, 2): True, ('-', 3, 1, 2, 1, 3, 3): True, ('-', 3, 1, 2, 2, 2, 3): True, ('-', 3, 1, 2, 2, 3, 2): True, ('-', 3, 1, 2, 3, 1, 3): True, ('-', 3, 1, 2, 3, 2, 2): True, ('-', 3, 1, 2, 3, 3, 1): True, ('-', 3, 1, 3, 1, 2, 3): True, ('-', 3, 1, 3, 1, 3, 2): True, ('-', 3, 1, 3, 2, 1, 3): True, ('-', 3, 1, 3, 2, 2, 2): True, ('-', 3, 1, 3, 2, 3, 1): True, ('-', 3, 1, 3, 3, 1, 2): True, ('-', 3, 1, 3, 3, 2, 1): True, ('-', 3, 2, 1, 1, 3, 3): True, ('-', 3, 2, 1, 2, 2, 3): True, ('-', 3, 2, 1, 2, 3, 2): True, ('-', 3, 2, 1, 3, 1, 3): True, ('-', 3, 2, 1, 3, 2, 2): True, ('-', 3, 2, 1, 3, 3, 1): True, ('-', 3, 2, 2, 1, 2, 3): True, ('-', 3, 2, 2, 1, 3, 2): True, ('-', 3, 2, 2, 2, 1, 3): True, ('-', 3, 2, 2, 2, 2, 2): True, ('-', 3, 2, 2, 2, 3, 1): True, ('-', 3, 2, 2, 3, 1, 2): True, ('-', 3, 2, 2, 3, 2, 1): True, ('-', 3, 2, 3, 1, 1, 3): True, ('-', 3, 2, 3, 1, 2, 2): True, ('-', 3, 2, 3, 1, 3, 1): True, ('-', 3, 2, 3, 2, 1, 2): True, ('-', 3, 2, 3, 2, 2, 1): True, ('-', 3, 2, 3, 3, 1, 1): True, ('-', 3, 3, 1, 1, 2, 3): True, ('-', 3, 3, 1, 1, 3, 2): True, ('-', 3, 3, 1, 2, 1, 3): True, ('-', 3, 3, 1, 2, 2, 2): True, ('-', 3, 3, 1, 2, 3, 1): True, ('-', 3, 3, 1, 3, 1, 2): True, ('-', 3, 3, 1, 3, 2, 1): True, ('-', 3, 3, 2, 1, 1, 3): True, ('-', 3, 3, 2, 1, 2, 2): True, ('-', 3, 3, 2, 1, 3, 1): True, ('-', 3, 3, 2, 2, 1, 2): True, ('-', 3, 3, 2, 2, 2, 1): True, ('-', 3, 3, 2, 3, 1, 1): True, ('-', 3, 3, 3, 1, 1, 2): True, ('-', 3, 3, 3, 1, 2, 1): True, ('-', 3, 3, 3, 2, 1, 1): True}

----------------------------------------------------------------------
Ran 44 tests in 6.125s

FAILED (failures=2)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0019s
test_bne_grid_2: 0.0007s
test_bne_grid_3: 0.0035s
test_bne_grid_4: 0.0114s
test_bne_grid_5: 0.0383s
test_cages_1: 0.0003s
test_cages_2: 0.0004s
test_cages_3: 0.0004s
test_cages_4: 0.0061s
test_cages_5: 0.0043s
test_cages_6: 0.0032s
test_nary_grid_1: 0.0005s
test_nary_grid_2: 0.0027s
test_nary_grid_3: 0.0148s
test_nary_grid_4: 0.0887s
test_bin_prop_fc_0: 0.0014s
test_bin_prop_fc_1: 0.0043s
test_bin_prop_fc_2: 0.0044s
test_bin_prop_fc_3: 0.0050s
test_bin_prop_fc_4: 0.0079s
test_prop_fc_0: 0.0046s
test_prop_fc_1: 0.9207s
test_prop_fc_2: 1.1614s
test_prop_fc_3: 0.0018s
test_prop_fc_4: 1.1442s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0019s
test_prop_GAC_2: 0.0033s
test_prop_GAC_3: 0.0019s
test_prop_GAC_4: 0.0032s
test_prop_GAC_5: 0.0451s
test_prop_GAC_6: 0.2422s
test_prop_GAC_7: 0.0498s
test_prop_GAC_8: 1.0986s
test_prop_GAC_9: 1.2209s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.375/0.5

TOTAL: 2.625/2.75
Code quality: ?/0.25

Running time: 2024_02_05-11:25:05

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}

Encoded incorrect constraint:
 {('-', 1, 1, 2, 2): True, ('-', 1, 2, 1, 2): True, ('-', 1, 2, 2, 1): True, ('-', 2, 2, 2, 2): True}
Input board: (2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}
Input board: (3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


Encoded incorrect constraint:
 {('-', 1, 1, 1, 1, 2, 3): True, ('-', 1, 1, 1, 1, 3, 2): True, ('-', 1, 1, 1, 2, 1, 3): True, ('-', 1, 1, 1, 2, 2, 2): True, ('-', 1, 1, 1, 2, 3, 1): True, ('-', 1, 1, 1, 3, 1, 2): True, ('-', 1, 1, 1, 3, 2, 1): True, ('-', 1, 1, 2, 1, 1, 3): True, ('-', 1, 1, 2, 1, 2, 2): True, ('-', 1, 1, 2, 1, 3, 1): True, ('-', 1, 1, 2, 2, 1, 2): True, ('-', 1, 1, 2, 2, 2, 1): True, ('-', 1, 1, 2, 3, 1, 1): True, ('-', 1, 1, 3, 1, 1, 2): True, ('-', 1, 1, 3, 1, 2, 1): True, ('-', 1, 1, 3, 2, 1, 1): True, ('-', 1, 2, 1, 1, 1, 3): True, ('-', 1, 2, 1, 1, 2, 2): True, ('-', 1, 2, 1, 1, 3, 1): True, ('-', 1, 2, 1, 2, 1, 2): True, ('-', 1, 2, 1, 2, 2, 1): True, ('-', 1, 2, 1, 3, 1, 1): True, ('-', 1, 2, 2, 1, 1, 2): True, ('-', 1, 2, 2, 1, 2, 1): True, ('-', 1, 2, 2, 2, 1, 1): True, ('-', 1, 2, 3, 1, 1, 1): True, ('-', 1, 3, 1, 1, 1, 2): True, ('-', 1, 3, 1, 1, 2, 1): True, ('-', 1, 3, 1, 2, 1, 1): True, ('-', 1, 3, 2, 1, 1, 1): True, ('-', 2, 1, 1, 1, 3, 3): True, ('-', 2, 1, 1, 2, 2, 3): True, ('-', 2, 1, 1, 2, 3, 2): True, ('-', 2, 1, 1, 3, 1, 3): True, ('-', 2, 1, 1, 3, 2, 2): True, ('-', 2, 1, 1, 3, 3, 1): True, ('-', 2, 1, 2, 1, 2, 3): True, ('-', 2, 1, 2, 1, 3, 2): True, ('-', 2, 1, 2, 2, 1, 3): True, ('-', 2, 1, 2, 2, 2, 2): True, ('-', 2, 1, 2, 2, 3, 1): True, ('-', 2, 1, 2, 3, 1, 2): True, ('-', 2, 1, 2, 3, 2, 1): True, ('-', 2, 1, 3, 1, 1, 3): True, ('-', 2, 1, 3, 1, 2, 2): True, ('-', 2, 1, 3, 1, 3, 1): True, ('-', 2, 1, 3, 2, 1, 2): True, ('-', 2, 1, 3, 2, 2, 1): True, ('-', 2, 1, 3, 3, 1, 1): True, ('-', 2, 2, 1, 1, 2, 3): True, ('-', 2, 2, 1, 1, 3, 2): True, ('-', 2, 2, 1, 2, 1, 3): True, ('-', 2, 2, 1, 2, 2, 2): True, ('-', 2, 2, 1, 2, 3, 1): True, ('-', 2, 2, 1, 3, 1, 2): True, ('-', 2, 2, 1, 3, 2, 1): True, ('-', 2, 2, 2, 1, 1, 3): True, ('-', 2, 2, 2, 1, 2, 2): True, ('-', 2, 2, 2, 1, 3, 1): True, ('-', 2, 2, 2, 2, 1, 2): True, ('-', 2, 2, 2, 2, 2, 1): True, ('-', 2, 2, 2, 3, 1, 1): True, ('-', 2, 2, 3, 1, 1, 2): True, ('-', 2, 2, 3, 1, 2, 1): True, ('-', 2, 2, 3, 2, 1, 1): True, ('-', 2, 3, 1, 1, 1, 3): True, ('-', 2, 3, 1, 1, 2, 2): True, ('-', 2, 3, 1, 1, 3, 1): True, ('-', 2, 3, 1, 2, 1, 2): True, ('-', 2, 3, 1, 2, 2, 1): True, ('-', 2, 3, 1, 3, 1, 1): True, ('-', 2, 3, 2, 1, 1, 2): True, ('-', 2, 3, 2, 1, 2, 1): True, ('-', 2, 3, 2, 2, 1, 1): True, ('-', 2, 3, 3, 1, 1, 1): True, ('-', 3, 1, 1, 2, 3, 3): True, ('-', 3, 1, 1, 3, 2, 3): True, ('-', 3, 1, 1, 3, 3, 2): True, ('-', 3, 1, 2, 1, 3, 3): True, ('-', 3, 1, 2, 2, 2, 3): True, ('-', 3, 1, 2, 2, 3, 2): True, ('-', 3, 1, 2, 3, 1, 3): True, ('-', 3, 1, 2, 3, 2, 2): True, ('-', 3, 1, 2, 3, 3, 1): True, ('-', 3, 1, 3, 1, 2, 3): True, ('-', 3, 1, 3, 1, 3, 2): True, ('-', 3, 1, 3, 2, 1, 3): True, ('-', 3, 1, 3, 2, 2, 2): True, ('-', 3, 1, 3, 2, 3, 1): True, ('-', 3, 1, 3, 3, 1, 2): True, ('-', 3, 1, 3, 3, 2, 1): True, ('-', 3, 2, 1, 1, 3, 3): True, ('-', 3, 2, 1, 2, 2, 3): True, ('-', 3, 2, 1, 2, 3, 2): True, ('-', 3, 2, 1, 3, 1, 3): True, ('-', 3, 2, 1, 3, 2, 2): True, ('-', 3, 2, 1, 3, 3, 1): True, ('-', 3, 2, 2, 1, 2, 3): True, ('-', 3, 2, 2, 1, 3, 2): True, ('-', 3, 2, 2, 2, 1, 3): True, ('-', 3, 2, 2, 2, 2, 2): True, ('-', 3, 2, 2, 2, 3, 1): True, ('-', 3, 2, 2, 3, 1, 2): True, ('-', 3, 2, 2, 3, 2, 1): True, ('-', 3, 2, 3, 1, 1, 3): True, ('-', 3, 2, 3, 1, 2, 2): True, ('-', 3, 2, 3, 1, 3, 1): True, ('-', 3, 2, 3, 2, 1, 2): True, ('-', 3, 2, 3, 2, 2, 1): True, ('-', 3, 2, 3, 3, 1, 1): True, ('-', 3, 3, 1, 1, 2, 3): True, ('-', 3, 3, 1, 1, 3, 2): True, ('-', 3, 3, 1, 2, 1, 3): True, ('-', 3, 3, 1, 2, 2, 2): True, ('-', 3, 3, 1, 2, 3, 1): True, ('-', 3, 3, 1, 3, 1, 2): True, ('-', 3, 3, 1, 3, 2, 1): True, ('-', 3, 3, 2, 1, 1, 3): True, ('-', 3, 3, 2, 1, 2, 2): True, ('-', 3, 3, 2, 1, 3, 1): True, ('-', 3, 3, 2, 2, 1, 2): True, ('-', 3, 3, 2, 2, 2, 1): True, ('-', 3, 3, 2, 3, 1, 1): True, ('-', 3, 3, 3, 1, 1, 2): True, ('-', 3, 3, 3, 1, 2, 1): True, ('-', 3, 3, 3, 2, 1, 1): True}

----------------------------------------------------------------------
Ran 44 tests in 5.522s

FAILED (failures=2)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0009s
test_bne_grid_2: 0.0006s
test_bne_grid_3: 0.0039s
test_bne_grid_4: 0.0083s
test_bne_grid_5: 0.0284s
test_cages_1: 0.0002s
test_cages_2: 0.0004s
test_cages_3: 0.0006s
test_cages_4: 0.0034s
test_cages_5: 0.0034s
test_cages_6: 0.0020s
test_nary_grid_1: 0.0003s
test_nary_grid_2: 0.0013s
test_nary_grid_3: 0.0081s
test_nary_grid_4: 0.0605s
test_bin_prop_fc_0: 0.0010s
test_bin_prop_fc_1: 0.0030s
test_bin_prop_fc_2: 0.0028s
test_bin_prop_fc_3: 0.0030s
test_bin_prop_fc_4: 0.0032s
test_prop_fc_0: 0.0017s
test_prop_fc_1: 0.6358s
test_prop_fc_2: 1.1336s
test_prop_fc_3: 0.0016s
test_prop_fc_4: 1.0546s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0019s
test_prop_GAC_2: 0.0034s
test_prop_GAC_3: 0.0025s
test_prop_GAC_4: 0.0032s
test_prop_GAC_5: 0.0407s
test_prop_GAC_6: 0.2072s
test_prop_GAC_7: 0.0489s
test_prop_GAC_8: 1.1486s
test_prop_GAC_9: 1.0839s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.375/0.5

TOTAL: 2.625/2.75
Code quality: ?/0.25

Running time: 2024_02_05-11:33:59

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}

Encoded incorrect constraint:
 {('-', 1, 1, 2, 2): True, ('-', 1, 2, 1, 2): True, ('-', 1, 2, 2, 1): True, ('-', 2, 2, 2, 2): True}
Input board: (2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}
Input board: (3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


Encoded incorrect constraint:
 {('-', 1, 1, 1, 1, 2, 3): True, ('-', 1, 1, 1, 1, 3, 2): True, ('-', 1, 1, 1, 2, 1, 3): True, ('-', 1, 1, 1, 2, 2, 2): True, ('-', 1, 1, 1, 2, 3, 1): True, ('-', 1, 1, 1, 3, 1, 2): True, ('-', 1, 1, 1, 3, 2, 1): True, ('-', 1, 1, 2, 1, 1, 3): True, ('-', 1, 1, 2, 1, 2, 2): True, ('-', 1, 1, 2, 1, 3, 1): True, ('-', 1, 1, 2, 2, 1, 2): True, ('-', 1, 1, 2, 2, 2, 1): True, ('-', 1, 1, 2, 3, 1, 1): True, ('-', 1, 1, 3, 1, 1, 2): True, ('-', 1, 1, 3, 1, 2, 1): True, ('-', 1, 1, 3, 2, 1, 1): True, ('-', 1, 2, 1, 1, 1, 3): True, ('-', 1, 2, 1, 1, 2, 2): True, ('-', 1, 2, 1, 1, 3, 1): True, ('-', 1, 2, 1, 2, 1, 2): True, ('-', 1, 2, 1, 2, 2, 1): True, ('-', 1, 2, 1, 3, 1, 1): True, ('-', 1, 2, 2, 1, 1, 2): True, ('-', 1, 2, 2, 1, 2, 1): True, ('-', 1, 2, 2, 2, 1, 1): True, ('-', 1, 2, 3, 1, 1, 1): True, ('-', 1, 3, 1, 1, 1, 2): True, ('-', 1, 3, 1, 1, 2, 1): True, ('-', 1, 3, 1, 2, 1, 1): True, ('-', 1, 3, 2, 1, 1, 1): True, ('-', 2, 1, 1, 1, 3, 3): True, ('-', 2, 1, 1, 2, 2, 3): True, ('-', 2, 1, 1, 2, 3, 2): True, ('-', 2, 1, 1, 3, 1, 3): True, ('-', 2, 1, 1, 3, 2, 2): True, ('-', 2, 1, 1, 3, 3, 1): True, ('-', 2, 1, 2, 1, 2, 3): True, ('-', 2, 1, 2, 1, 3, 2): True, ('-', 2, 1, 2, 2, 1, 3): True, ('-', 2, 1, 2, 2, 2, 2): True, ('-', 2, 1, 2, 2, 3, 1): True, ('-', 2, 1, 2, 3, 1, 2): True, ('-', 2, 1, 2, 3, 2, 1): True, ('-', 2, 1, 3, 1, 1, 3): True, ('-', 2, 1, 3, 1, 2, 2): True, ('-', 2, 1, 3, 1, 3, 1): True, ('-', 2, 1, 3, 2, 1, 2): True, ('-', 2, 1, 3, 2, 2, 1): True, ('-', 2, 1, 3, 3, 1, 1): True, ('-', 2, 2, 1, 1, 2, 3): True, ('-', 2, 2, 1, 1, 3, 2): True, ('-', 2, 2, 1, 2, 1, 3): True, ('-', 2, 2, 1, 2, 2, 2): True, ('-', 2, 2, 1, 2, 3, 1): True, ('-', 2, 2, 1, 3, 1, 2): True, ('-', 2, 2, 1, 3, 2, 1): True, ('-', 2, 2, 2, 1, 1, 3): True, ('-', 2, 2, 2, 1, 2, 2): True, ('-', 2, 2, 2, 1, 3, 1): True, ('-', 2, 2, 2, 2, 1, 2): True, ('-', 2, 2, 2, 2, 2, 1): True, ('-', 2, 2, 2, 3, 1, 1): True, ('-', 2, 2, 3, 1, 1, 2): True, ('-', 2, 2, 3, 1, 2, 1): True, ('-', 2, 2, 3, 2, 1, 1): True, ('-', 2, 3, 1, 1, 1, 3): True, ('-', 2, 3, 1, 1, 2, 2): True, ('-', 2, 3, 1, 1, 3, 1): True, ('-', 2, 3, 1, 2, 1, 2): True, ('-', 2, 3, 1, 2, 2, 1): True, ('-', 2, 3, 1, 3, 1, 1): True, ('-', 2, 3, 2, 1, 1, 2): True, ('-', 2, 3, 2, 1, 2, 1): True, ('-', 2, 3, 2, 2, 1, 1): True, ('-', 2, 3, 3, 1, 1, 1): True, ('-', 3, 1, 1, 2, 3, 3): True, ('-', 3, 1, 1, 3, 2, 3): True, ('-', 3, 1, 1, 3, 3, 2): True, ('-', 3, 1, 2, 1, 3, 3): True, ('-', 3, 1, 2, 2, 2, 3): True, ('-', 3, 1, 2, 2, 3, 2): True, ('-', 3, 1, 2, 3, 1, 3): True, ('-', 3, 1, 2, 3, 2, 2): True, ('-', 3, 1, 2, 3, 3, 1): True, ('-', 3, 1, 3, 1, 2, 3): True, ('-', 3, 1, 3, 1, 3, 2): True, ('-', 3, 1, 3, 2, 1, 3): True, ('-', 3, 1, 3, 2, 2, 2): True, ('-', 3, 1, 3, 2, 3, 1): True, ('-', 3, 1, 3, 3, 1, 2): True, ('-', 3, 1, 3, 3, 2, 1): True, ('-', 3, 2, 1, 1, 3, 3): True, ('-', 3, 2, 1, 2, 2, 3): True, ('-', 3, 2, 1, 2, 3, 2): True, ('-', 3, 2, 1, 3, 1, 3): True, ('-', 3, 2, 1, 3, 2, 2): True, ('-', 3, 2, 1, 3, 3, 1): True, ('-', 3, 2, 2, 1, 2, 3): True, ('-', 3, 2, 2, 1, 3, 2): True, ('-', 3, 2, 2, 2, 1, 3): True, ('-', 3, 2, 2, 2, 2, 2): True, ('-', 3, 2, 2, 2, 3, 1): True, ('-', 3, 2, 2, 3, 1, 2): True, ('-', 3, 2, 2, 3, 2, 1): True, ('-', 3, 2, 3, 1, 1, 3): True, ('-', 3, 2, 3, 1, 2, 2): True, ('-', 3, 2, 3, 1, 3, 1): True, ('-', 3, 2, 3, 2, 1, 2): True, ('-', 3, 2, 3, 2, 2, 1): True, ('-', 3, 2, 3, 3, 1, 1): True, ('-', 3, 3, 1, 1, 2, 3): True, ('-', 3, 3, 1, 1, 3, 2): True, ('-', 3, 3, 1, 2, 1, 3): True, ('-', 3, 3, 1, 2, 2, 2): True, ('-', 3, 3, 1, 2, 3, 1): True, ('-', 3, 3, 1, 3, 1, 2): True, ('-', 3, 3, 1, 3, 2, 1): True, ('-', 3, 3, 2, 1, 1, 3): True, ('-', 3, 3, 2, 1, 2, 2): True, ('-', 3, 3, 2, 1, 3, 1): True, ('-', 3, 3, 2, 2, 1, 2): True, ('-', 3, 3, 2, 2, 2, 1): True, ('-', 3, 3, 2, 3, 1, 1): True, ('-', 3, 3, 3, 1, 1, 2): True, ('-', 3, 3, 3, 1, 2, 1): True, ('-', 3, 3, 3, 2, 1, 1): True}

----------------------------------------------------------------------
Ran 44 tests in 5.377s

FAILED (failures=2)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0008s
test_bne_grid_2: 0.0005s
test_bne_grid_3: 0.0028s
test_bne_grid_4: 0.0065s
test_bne_grid_5: 0.0184s
test_cages_1: 0.0002s
test_cages_2: 0.0002s
test_cages_3: 0.0003s
test_cages_4: 0.0025s
test_cages_5: 0.0040s
test_cages_6: 0.0017s
test_nary_grid_1: 0.0002s
test_nary_grid_2: 0.0010s
test_nary_grid_3: 0.0060s
test_nary_grid_4: 0.0483s
test_bin_prop_fc_0: 0.0008s
test_bin_prop_fc_1: 0.0028s
test_bin_prop_fc_2: 0.0030s
test_bin_prop_fc_3: 0.0027s
test_bin_prop_fc_4: 0.0030s
test_prop_fc_0: 0.0014s
test_prop_fc_1: 0.6193s
test_prop_fc_2: 1.1211s
test_prop_fc_3: 0.0017s
test_prop_fc_4: 1.1014s
test_prop_GAC_0: 0.0014s
test_prop_GAC_1: 0.0034s
test_prop_GAC_2: 0.0072s
test_prop_GAC_3: 0.0040s
test_prop_GAC_4: 0.0083s
test_prop_GAC_5: 0.0484s
test_prop_GAC_6: 0.2043s
test_prop_GAC_7: 0.0482s
test_prop_GAC_8: 1.2145s
test_prop_GAC_9: 0.8699s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.375/0.5

TOTAL: 2.625/2.75
Code quality: ?/0.25

Running time: 2024_02_05-12:37:48

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}

Encoded incorrect constraint:
 {('-', 1, 1, 2, 2): True, ('-', 1, 2, 1, 2): True, ('-', 1, 2, 2, 1): True, ('-', 2, 2, 2, 2): True}
Input board: (2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}
Input board: (3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


Encoded incorrect constraint:
 {('-', 1, 1, 1, 1, 2, 3): True, ('-', 1, 1, 1, 1, 3, 2): True, ('-', 1, 1, 1, 2, 1, 3): True, ('-', 1, 1, 1, 2, 2, 2): True, ('-', 1, 1, 1, 2, 3, 1): True, ('-', 1, 1, 1, 3, 1, 2): True, ('-', 1, 1, 1, 3, 2, 1): True, ('-', 1, 1, 2, 1, 1, 3): True, ('-', 1, 1, 2, 1, 2, 2): True, ('-', 1, 1, 2, 1, 3, 1): True, ('-', 1, 1, 2, 2, 1, 2): True, ('-', 1, 1, 2, 2, 2, 1): True, ('-', 1, 1, 2, 3, 1, 1): True, ('-', 1, 1, 3, 1, 1, 2): True, ('-', 1, 1, 3, 1, 2, 1): True, ('-', 1, 1, 3, 2, 1, 1): True, ('-', 1, 2, 1, 1, 1, 3): True, ('-', 1, 2, 1, 1, 2, 2): True, ('-', 1, 2, 1, 1, 3, 1): True, ('-', 1, 2, 1, 2, 1, 2): True, ('-', 1, 2, 1, 2, 2, 1): True, ('-', 1, 2, 1, 3, 1, 1): True, ('-', 1, 2, 2, 1, 1, 2): True, ('-', 1, 2, 2, 1, 2, 1): True, ('-', 1, 2, 2, 2, 1, 1): True, ('-', 1, 2, 3, 1, 1, 1): True, ('-', 1, 3, 1, 1, 1, 2): True, ('-', 1, 3, 1, 1, 2, 1): True, ('-', 1, 3, 1, 2, 1, 1): True, ('-', 1, 3, 2, 1, 1, 1): True, ('-', 2, 1, 1, 1, 3, 3): True, ('-', 2, 1, 1, 2, 2, 3): True, ('-', 2, 1, 1, 2, 3, 2): True, ('-', 2, 1, 1, 3, 1, 3): True, ('-', 2, 1, 1, 3, 2, 2): True, ('-', 2, 1, 1, 3, 3, 1): True, ('-', 2, 1, 2, 1, 2, 3): True, ('-', 2, 1, 2, 1, 3, 2): True, ('-', 2, 1, 2, 2, 1, 3): True, ('-', 2, 1, 2, 2, 2, 2): True, ('-', 2, 1, 2, 2, 3, 1): True, ('-', 2, 1, 2, 3, 1, 2): True, ('-', 2, 1, 2, 3, 2, 1): True, ('-', 2, 1, 3, 1, 1, 3): True, ('-', 2, 1, 3, 1, 2, 2): True, ('-', 2, 1, 3, 1, 3, 1): True, ('-', 2, 1, 3, 2, 1, 2): True, ('-', 2, 1, 3, 2, 2, 1): True, ('-', 2, 1, 3, 3, 1, 1): True, ('-', 2, 2, 1, 1, 2, 3): True, ('-', 2, 2, 1, 1, 3, 2): True, ('-', 2, 2, 1, 2, 1, 3): True, ('-', 2, 2, 1, 2, 2, 2): True, ('-', 2, 2, 1, 2, 3, 1): True, ('-', 2, 2, 1, 3, 1, 2): True, ('-', 2, 2, 1, 3, 2, 1): True, ('-', 2, 2, 2, 1, 1, 3): True, ('-', 2, 2, 2, 1, 2, 2): True, ('-', 2, 2, 2, 1, 3, 1): True, ('-', 2, 2, 2, 2, 1, 2): True, ('-', 2, 2, 2, 2, 2, 1): True, ('-', 2, 2, 2, 3, 1, 1): True, ('-', 2, 2, 3, 1, 1, 2): True, ('-', 2, 2, 3, 1, 2, 1): True, ('-', 2, 2, 3, 2, 1, 1): True, ('-', 2, 3, 1, 1, 1, 3): True, ('-', 2, 3, 1, 1, 2, 2): True, ('-', 2, 3, 1, 1, 3, 1): True, ('-', 2, 3, 1, 2, 1, 2): True, ('-', 2, 3, 1, 2, 2, 1): True, ('-', 2, 3, 1, 3, 1, 1): True, ('-', 2, 3, 2, 1, 1, 2): True, ('-', 2, 3, 2, 1, 2, 1): True, ('-', 2, 3, 2, 2, 1, 1): True, ('-', 2, 3, 3, 1, 1, 1): True, ('-', 3, 1, 1, 2, 3, 3): True, ('-', 3, 1, 1, 3, 2, 3): True, ('-', 3, 1, 1, 3, 3, 2): True, ('-', 3, 1, 2, 1, 3, 3): True, ('-', 3, 1, 2, 2, 2, 3): True, ('-', 3, 1, 2, 2, 3, 2): True, ('-', 3, 1, 2, 3, 1, 3): True, ('-', 3, 1, 2, 3, 2, 2): True, ('-', 3, 1, 2, 3, 3, 1): True, ('-', 3, 1, 3, 1, 2, 3): True, ('-', 3, 1, 3, 1, 3, 2): True, ('-', 3, 1, 3, 2, 1, 3): True, ('-', 3, 1, 3, 2, 2, 2): True, ('-', 3, 1, 3, 2, 3, 1): True, ('-', 3, 1, 3, 3, 1, 2): True, ('-', 3, 1, 3, 3, 2, 1): True, ('-', 3, 2, 1, 1, 3, 3): True, ('-', 3, 2, 1, 2, 2, 3): True, ('-', 3, 2, 1, 2, 3, 2): True, ('-', 3, 2, 1, 3, 1, 3): True, ('-', 3, 2, 1, 3, 2, 2): True, ('-', 3, 2, 1, 3, 3, 1): True, ('-', 3, 2, 2, 1, 2, 3): True, ('-', 3, 2, 2, 1, 3, 2): True, ('-', 3, 2, 2, 2, 1, 3): True, ('-', 3, 2, 2, 2, 2, 2): True, ('-', 3, 2, 2, 2, 3, 1): True, ('-', 3, 2, 2, 3, 1, 2): True, ('-', 3, 2, 2, 3, 2, 1): True, ('-', 3, 2, 3, 1, 1, 3): True, ('-', 3, 2, 3, 1, 2, 2): True, ('-', 3, 2, 3, 1, 3, 1): True, ('-', 3, 2, 3, 2, 1, 2): True, ('-', 3, 2, 3, 2, 2, 1): True, ('-', 3, 2, 3, 3, 1, 1): True, ('-', 3, 3, 1, 1, 2, 3): True, ('-', 3, 3, 1, 1, 3, 2): True, ('-', 3, 3, 1, 2, 1, 3): True, ('-', 3, 3, 1, 2, 2, 2): True, ('-', 3, 3, 1, 2, 3, 1): True, ('-', 3, 3, 1, 3, 1, 2): True, ('-', 3, 3, 1, 3, 2, 1): True, ('-', 3, 3, 2, 1, 1, 3): True, ('-', 3, 3, 2, 1, 2, 2): True, ('-', 3, 3, 2, 1, 3, 1): True, ('-', 3, 3, 2, 2, 1, 2): True, ('-', 3, 3, 2, 2, 2, 1): True, ('-', 3, 3, 2, 3, 1, 1): True, ('-', 3, 3, 3, 1, 1, 2): True, ('-', 3, 3, 3, 1, 2, 1): True, ('-', 3, 3, 3, 2, 1, 1): True}

----------------------------------------------------------------------
Ran 44 tests in 5.470s

FAILED (failures=2)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0007s
test_bne_grid_2: 0.0006s
test_bne_grid_3: 0.0036s
test_bne_grid_4: 0.0083s
test_bne_grid_5: 0.0222s
test_cages_1: 0.0004s
test_cages_2: 0.0002s
test_cages_3: 0.0003s
test_cages_4: 0.0035s
test_cages_5: 0.0031s
test_cages_6: 0.0019s
test_nary_grid_1: 0.0003s
test_nary_grid_2: 0.0013s
test_nary_grid_3: 0.0071s
test_nary_grid_4: 0.0550s
test_bin_prop_fc_0: 0.0008s
test_bin_prop_fc_1: 0.0028s
test_bin_prop_fc_2: 0.0046s
test_bin_prop_fc_3: 0.0049s
test_bin_prop_fc_4: 0.0031s
test_prop_fc_0: 0.0013s
test_prop_fc_1: 0.7466s
test_prop_fc_2: 1.1605s
test_prop_fc_3: 0.0017s
test_prop_fc_4: 1.0918s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0020s
test_prop_GAC_2: 0.0034s
test_prop_GAC_3: 0.0021s
test_prop_GAC_4: 0.0031s
test_prop_GAC_5: 0.0399s
test_prop_GAC_6: 0.2039s
test_prop_GAC_7: 0.0669s
test_prop_GAC_8: 1.1587s
test_prop_GAC_9: 0.8469s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.375/0.5

TOTAL: 2.625/2.75
Code quality: ?/0.25

Running time: 2024_02_05-12:39:05

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... FAIL
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... FAIL
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_cages_2 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}

Encoded incorrect constraint:
 {('-', 1, 1, 2, 2): True, ('-', 1, 2, 1, 2): True, ('-', 1, 2, 2, 1): True, ('-', 2, 2, 2, 2): True}
Input board: (2, [(4, [(1, 1), (1, 2), (2, 1), (2, 2)], '-')])


======================================================================
FAIL: test_cages_5 (__main__.TestCageConstraints)
----------------------------------------------------------------------
AssertionError: False is not true : 

Failed to encode:
 {}
Input board: (3, [(7, [(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3)], '-')])


Encoded incorrect constraint:
 {('-', 1, 1, 1, 1, 2, 3): True, ('-', 1, 1, 1, 1, 3, 2): True, ('-', 1, 1, 1, 2, 1, 3): True, ('-', 1, 1, 1, 2, 2, 2): True, ('-', 1, 1, 1, 2, 3, 1): True, ('-', 1, 1, 1, 3, 1, 2): True, ('-', 1, 1, 1, 3, 2, 1): True, ('-', 1, 1, 2, 1, 1, 3): True, ('-', 1, 1, 2, 1, 2, 2): True, ('-', 1, 1, 2, 1, 3, 1): True, ('-', 1, 1, 2, 2, 1, 2): True, ('-', 1, 1, 2, 2, 2, 1): True, ('-', 1, 1, 2, 3, 1, 1): True, ('-', 1, 1, 3, 1, 1, 2): True, ('-', 1, 1, 3, 1, 2, 1): True, ('-', 1, 1, 3, 2, 1, 1): True, ('-', 1, 2, 1, 1, 1, 3): True, ('-', 1, 2, 1, 1, 2, 2): True, ('-', 1, 2, 1, 1, 3, 1): True, ('-', 1, 2, 1, 2, 1, 2): True, ('-', 1, 2, 1, 2, 2, 1): True, ('-', 1, 2, 1, 3, 1, 1): True, ('-', 1, 2, 2, 1, 1, 2): True, ('-', 1, 2, 2, 1, 2, 1): True, ('-', 1, 2, 2, 2, 1, 1): True, ('-', 1, 2, 3, 1, 1, 1): True, ('-', 1, 3, 1, 1, 1, 2): True, ('-', 1, 3, 1, 1, 2, 1): True, ('-', 1, 3, 1, 2, 1, 1): True, ('-', 1, 3, 2, 1, 1, 1): True, ('-', 2, 1, 1, 1, 3, 3): True, ('-', 2, 1, 1, 2, 2, 3): True, ('-', 2, 1, 1, 2, 3, 2): True, ('-', 2, 1, 1, 3, 1, 3): True, ('-', 2, 1, 1, 3, 2, 2): True, ('-', 2, 1, 1, 3, 3, 1): True, ('-', 2, 1, 2, 1, 2, 3): True, ('-', 2, 1, 2, 1, 3, 2): True, ('-', 2, 1, 2, 2, 1, 3): True, ('-', 2, 1, 2, 2, 2, 2): True, ('-', 2, 1, 2, 2, 3, 1): True, ('-', 2, 1, 2, 3, 1, 2): True, ('-', 2, 1, 2, 3, 2, 1): True, ('-', 2, 1, 3, 1, 1, 3): True, ('-', 2, 1, 3, 1, 2, 2): True, ('-', 2, 1, 3, 1, 3, 1): True, ('-', 2, 1, 3, 2, 1, 2): True, ('-', 2, 1, 3, 2, 2, 1): True, ('-', 2, 1, 3, 3, 1, 1): True, ('-', 2, 2, 1, 1, 2, 3): True, ('-', 2, 2, 1, 1, 3, 2): True, ('-', 2, 2, 1, 2, 1, 3): True, ('-', 2, 2, 1, 2, 2, 2): True, ('-', 2, 2, 1, 2, 3, 1): True, ('-', 2, 2, 1, 3, 1, 2): True, ('-', 2, 2, 1, 3, 2, 1): True, ('-', 2, 2, 2, 1, 1, 3): True, ('-', 2, 2, 2, 1, 2, 2): True, ('-', 2, 2, 2, 1, 3, 1): True, ('-', 2, 2, 2, 2, 1, 2): True, ('-', 2, 2, 2, 2, 2, 1): True, ('-', 2, 2, 2, 3, 1, 1): True, ('-', 2, 2, 3, 1, 1, 2): True, ('-', 2, 2, 3, 1, 2, 1): True, ('-', 2, 2, 3, 2, 1, 1): True, ('-', 2, 3, 1, 1, 1, 3): True, ('-', 2, 3, 1, 1, 2, 2): True, ('-', 2, 3, 1, 1, 3, 1): True, ('-', 2, 3, 1, 2, 1, 2): True, ('-', 2, 3, 1, 2, 2, 1): True, ('-', 2, 3, 1, 3, 1, 1): True, ('-', 2, 3, 2, 1, 1, 2): True, ('-', 2, 3, 2, 1, 2, 1): True, ('-', 2, 3, 2, 2, 1, 1): True, ('-', 2, 3, 3, 1, 1, 1): True, ('-', 3, 1, 1, 2, 3, 3): True, ('-', 3, 1, 1, 3, 2, 3): True, ('-', 3, 1, 1, 3, 3, 2): True, ('-', 3, 1, 2, 1, 3, 3): True, ('-', 3, 1, 2, 2, 2, 3): True, ('-', 3, 1, 2, 2, 3, 2): True, ('-', 3, 1, 2, 3, 1, 3): True, ('-', 3, 1, 2, 3, 2, 2): True, ('-', 3, 1, 2, 3, 3, 1): True, ('-', 3, 1, 3, 1, 2, 3): True, ('-', 3, 1, 3, 1, 3, 2): True, ('-', 3, 1, 3, 2, 1, 3): True, ('-', 3, 1, 3, 2, 2, 2): True, ('-', 3, 1, 3, 2, 3, 1): True, ('-', 3, 1, 3, 3, 1, 2): True, ('-', 3, 1, 3, 3, 2, 1): True, ('-', 3, 2, 1, 1, 3, 3): True, ('-', 3, 2, 1, 2, 2, 3): True, ('-', 3, 2, 1, 2, 3, 2): True, ('-', 3, 2, 1, 3, 1, 3): True, ('-', 3, 2, 1, 3, 2, 2): True, ('-', 3, 2, 1, 3, 3, 1): True, ('-', 3, 2, 2, 1, 2, 3): True, ('-', 3, 2, 2, 1, 3, 2): True, ('-', 3, 2, 2, 2, 1, 3): True, ('-', 3, 2, 2, 2, 2, 2): True, ('-', 3, 2, 2, 2, 3, 1): True, ('-', 3, 2, 2, 3, 1, 2): True, ('-', 3, 2, 2, 3, 2, 1): True, ('-', 3, 2, 3, 1, 1, 3): True, ('-', 3, 2, 3, 1, 2, 2): True, ('-', 3, 2, 3, 1, 3, 1): True, ('-', 3, 2, 3, 2, 1, 2): True, ('-', 3, 2, 3, 2, 2, 1): True, ('-', 3, 2, 3, 3, 1, 1): True, ('-', 3, 3, 1, 1, 2, 3): True, ('-', 3, 3, 1, 1, 3, 2): True, ('-', 3, 3, 1, 2, 1, 3): True, ('-', 3, 3, 1, 2, 2, 2): True, ('-', 3, 3, 1, 2, 3, 1): True, ('-', 3, 3, 1, 3, 1, 2): True, ('-', 3, 3, 1, 3, 2, 1): True, ('-', 3, 3, 2, 1, 1, 3): True, ('-', 3, 3, 2, 1, 2, 2): True, ('-', 3, 3, 2, 1, 3, 1): True, ('-', 3, 3, 2, 2, 1, 2): True, ('-', 3, 3, 2, 2, 2, 1): True, ('-', 3, 3, 2, 3, 1, 1): True, ('-', 3, 3, 3, 1, 1, 2): True, ('-', 3, 3, 3, 1, 2, 1): True, ('-', 3, 3, 3, 2, 1, 1): True}

----------------------------------------------------------------------
Ran 44 tests in 5.972s

FAILED (failures=2)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0007s
test_bne_grid_2: 0.0005s
test_bne_grid_3: 0.0039s
test_bne_grid_4: 0.0076s
test_bne_grid_5: 0.0290s
test_cages_1: 0.0004s
test_cages_2: 0.0005s
test_cages_3: 0.0003s
test_cages_4: 0.0031s
test_cages_5: 0.0041s
test_cages_6: 0.0020s
test_nary_grid_1: 0.0002s
test_nary_grid_2: 0.0026s
test_nary_grid_3: 0.0070s
test_nary_grid_4: 0.0611s
test_bin_prop_fc_0: 0.0010s
test_bin_prop_fc_1: 0.0038s
test_bin_prop_fc_2: 0.0040s
test_bin_prop_fc_3: 0.0049s
test_bin_prop_fc_4: 0.0033s
test_prop_fc_0: 0.0018s
test_prop_fc_1: 0.7014s
test_prop_fc_2: 1.2370s
test_prop_fc_3: 0.0016s
test_prop_fc_4: 1.2116s
test_prop_GAC_0: 0.0009s
test_prop_GAC_1: 0.0024s
test_prop_GAC_2: 0.0041s
test_prop_GAC_3: 0.0025s
test_prop_GAC_4: 0.0042s
test_prop_GAC_5: 0.0428s
test_prop_GAC_6: 0.2313s
test_prop_GAC_7: 0.0480s
test_prop_GAC_8: 1.3527s
test_prop_GAC_9: 0.9682s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.375/0.5

TOTAL: 2.625/2.75
Code quality: ?/0.25

Running time: 2024_02_05-12:52:04

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

----------------------------------------------------------------------
Ran 44 tests in 5.908s

OK
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0008s
test_bne_grid_2: 0.0007s
test_bne_grid_3: 0.0038s
test_bne_grid_4: 0.0071s
test_bne_grid_5: 0.0200s
test_cages_1: 0.0002s
test_cages_2: 0.0003s
test_cages_3: 0.0003s
test_cages_4: 0.0011s
test_cages_5: 0.0010s
test_cages_6: 0.0017s
test_nary_grid_1: 0.0005s
test_nary_grid_2: 0.0010s
test_nary_grid_3: 0.0064s
test_nary_grid_4: 0.0628s
test_bin_prop_fc_0: 0.0013s
test_bin_prop_fc_1: 0.0038s
test_bin_prop_fc_2: 0.0039s
test_bin_prop_fc_3: 0.0038s
test_bin_prop_fc_4: 0.0043s
test_prop_fc_0: 0.0023s
test_prop_fc_1: 0.6470s
test_prop_fc_2: 1.2767s
test_prop_fc_3: 0.0017s
test_prop_fc_4: 1.2284s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0020s
test_prop_GAC_2: 0.0032s
test_prop_GAC_3: 0.0020s
test_prop_GAC_4: 0.0033s
test_prop_GAC_5: 0.0477s
test_prop_GAC_6: 0.2624s
test_prop_GAC_7: 0.0656s
test_prop_GAC_8: 1.3501s
test_prop_GAC_9: 0.8727s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.5/0.5

TOTAL: 2.75/2.75
Code quality: ?/0.25

Running time: 2024_02_05-12:53:56

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

----------------------------------------------------------------------
Ran 44 tests in 5.960s

OK
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0008s
test_bne_grid_2: 0.0006s
test_bne_grid_3: 0.0028s
test_bne_grid_4: 0.0128s
test_bne_grid_5: 0.0293s
test_cages_1: 0.0003s
test_cages_2: 0.0002s
test_cages_3: 0.0003s
test_cages_4: 0.0025s
test_cages_5: 0.0021s
test_cages_6: 0.0019s
test_nary_grid_1: 0.0004s
test_nary_grid_2: 0.0014s
test_nary_grid_3: 0.0091s
test_nary_grid_4: 0.0731s
test_bin_prop_fc_0: 0.0009s
test_bin_prop_fc_1: 0.0036s
test_bin_prop_fc_2: 0.0036s
test_bin_prop_fc_3: 0.0036s
test_bin_prop_fc_4: 0.0029s
test_prop_fc_0: 0.0013s
test_prop_fc_1: 0.7335s
test_prop_fc_2: 1.2778s
test_prop_fc_3: 0.0020s
test_prop_fc_4: 1.0596s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0019s
test_prop_GAC_2: 0.0035s
test_prop_GAC_3: 0.0020s
test_prop_GAC_4: 0.0033s
test_prop_GAC_5: 0.0550s
test_prop_GAC_6: 0.2472s
test_prop_GAC_7: 0.0496s
test_prop_GAC_8: 1.3359s
test_prop_GAC_9: 1.0152s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.5/0.5

TOTAL: 2.75/2.75
Code quality: ?/0.25

Running time: 2024_02_05-12:59:05

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

----------------------------------------------------------------------
Ran 44 tests in 4.793s

OK
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0006s
test_bne_grid_2: 0.0004s
test_bne_grid_3: 0.0027s
test_bne_grid_4: 0.0057s
test_bne_grid_5: 0.0210s
test_cages_1: 0.0001s
test_cages_2: 0.0001s
test_cages_3: 0.0002s
test_cages_4: 0.0015s
test_cages_5: 0.0020s
test_cages_6: 0.0019s
test_nary_grid_1: 0.0004s
test_nary_grid_2: 0.0019s
test_nary_grid_3: 0.0108s
test_nary_grid_4: 0.0528s
test_bin_prop_fc_0: 0.0008s
test_bin_prop_fc_1: 0.0042s
test_bin_prop_fc_2: 0.0027s
test_bin_prop_fc_3: 0.0025s
test_bin_prop_fc_4: 0.0026s
test_prop_fc_0: 0.0011s
test_prop_fc_1: 0.5487s
test_prop_fc_2: 1.0139s
test_prop_fc_3: 0.0013s
test_prop_fc_4: 0.8639s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0016s
test_prop_GAC_2: 0.0028s
test_prop_GAC_3: 0.0017s
test_prop_GAC_4: 0.0028s
test_prop_GAC_5: 0.0337s
test_prop_GAC_6: 0.1956s
test_prop_GAC_7: 0.0469s
test_prop_GAC_8: 1.0820s
test_prop_GAC_9: 0.8667s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.5/0.5

TOTAL: 2.75/2.75
Code quality: ?/0.25

Running time: 2024_02_05-19:47:39

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'add_vars'". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'add_vars'". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'add_vars'". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'CSP' object has no attribute 'add_vars'". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 5.699s

FAILED (failures=4)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0009s
test_bne_grid_2: 0.0008s
test_bne_grid_3: 0.0049s
test_bne_grid_4: 0.0126s
test_bne_grid_5: 0.0339s
test_cages_1: 0.0003s
test_cages_2: 0.0003s
test_cages_3: 0.0004s
test_cages_4: 0.0023s
test_cages_5: 0.0020s
test_cages_6: 0.0025s
test_bin_prop_fc_0: 0.0015s
test_bin_prop_fc_1: 0.0063s
test_bin_prop_fc_2: 0.0064s
test_bin_prop_fc_3: 0.0065s
test_bin_prop_fc_4: 0.0050s
test_prop_fc_0: 0.0045s
test_prop_fc_1: 0.6852s
test_prop_fc_2: 1.2162s
test_prop_fc_3: 0.0016s
test_prop_fc_4: 1.1613s
test_prop_GAC_0: 0.0015s
test_prop_GAC_1: 0.0040s
test_prop_GAC_2: 0.0087s
test_prop_GAC_3: 0.0042s
test_prop_GAC_4: 0.0096s
test_prop_GAC_5: 0.0494s
test_prop_GAC_6: 0.2499s
test_prop_GAC_7: 0.0495s
test_prop_GAC_8: 1.2678s
test_prop_GAC_9: 0.8735s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.0/0.25
CAGEY: 0.5/0.5

TOTAL: 2.5/2.75
Code quality: ?/0.25

Running time: 2024_02_05-20:11:59

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

----------------------------------------------------------------------
Ran 44 tests in 5.973s

OK
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0017s
test_bne_grid_2: 0.0009s
test_bne_grid_3: 0.0048s
test_bne_grid_4: 0.0127s
test_bne_grid_5: 0.0279s
test_cages_1: 0.0004s
test_cages_2: 0.0003s
test_cages_3: 0.0002s
test_cages_4: 0.0014s
test_cages_5: 0.0010s
test_cages_6: 0.0010s
test_nary_grid_1: 0.0004s
test_nary_grid_2: 0.0012s
test_nary_grid_3: 0.0074s
test_nary_grid_4: 0.0854s
test_bin_prop_fc_0: 0.0015s
test_bin_prop_fc_1: 0.0051s
test_bin_prop_fc_2: 0.0050s
test_bin_prop_fc_3: 0.0052s
test_bin_prop_fc_4: 0.0052s
test_prop_fc_0: 0.0018s
test_prop_fc_1: 0.7757s
test_prop_fc_2: 1.5147s
test_prop_fc_3: 0.0016s
test_prop_fc_4: 1.1817s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0019s
test_prop_GAC_2: 0.0034s
test_prop_GAC_3: 0.0020s
test_prop_GAC_4: 0.0033s
test_prop_GAC_5: 0.0377s
test_prop_GAC_6: 0.1975s
test_prop_GAC_7: 0.0553s
test_prop_GAC_8: 1.1071s
test_prop_GAC_9: 0.8996s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.5/0.5

TOTAL: 2.75/2.75
Code quality: ?/0.25

Running time: 2024_02_05-20:12:34

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object has no attribute 'name'". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object has no attribute 'name'". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object has no attribute 'name'". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "'NoneType' object has no attribute 'name'". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 6.814s

FAILED (failures=4)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0008s
test_bne_grid_2: 0.0005s
test_bne_grid_3: 0.0039s
test_bne_grid_4: 0.0120s
test_bne_grid_5: 0.0279s
test_cages_1: 0.0002s
test_cages_2: 0.0003s
test_cages_3: 0.0006s
test_cages_4: 0.0019s
test_cages_5: 0.0017s
test_cages_6: 0.0026s
test_bin_prop_fc_0: 0.0013s
test_bin_prop_fc_1: 0.0057s
test_bin_prop_fc_2: 0.0042s
test_bin_prop_fc_3: 0.0076s
test_bin_prop_fc_4: 0.0068s
test_prop_fc_0: 0.0023s
test_prop_fc_1: 0.7731s
test_prop_fc_2: 1.6380s
test_prop_fc_3: 0.0018s
test_prop_fc_4: 1.5354s
test_prop_GAC_0: 0.0013s
test_prop_GAC_1: 0.0036s
test_prop_GAC_2: 0.0082s
test_prop_GAC_3: 0.0046s
test_prop_GAC_4: 0.0056s
test_prop_GAC_5: 0.0688s
test_prop_GAC_6: 0.2446s
test_prop_GAC_7: 0.0529s
test_prop_GAC_8: 1.3941s
test_prop_GAC_9: 0.9742s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.0/0.25
CAGEY: 0.5/0.5

TOTAL: 2.5/2.75
Code quality: ?/0.25

Running time: 2024_02_05-20:13:33

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

----------------------------------------------------------------------
Ran 44 tests in 5.742s

OK
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0009s
test_bne_grid_2: 0.0006s
test_bne_grid_3: 0.0040s
test_bne_grid_4: 0.0083s
test_bne_grid_5: 0.0204s
test_cages_1: 0.0002s
test_cages_2: 0.0001s
test_cages_3: 0.0002s
test_cages_4: 0.0012s
test_cages_5: 0.0009s
test_cages_6: 0.0010s
test_nary_grid_1: 0.0006s
test_nary_grid_2: 0.0012s
test_nary_grid_3: 0.0095s
test_nary_grid_4: 0.0536s
test_bin_prop_fc_0: 0.0012s
test_bin_prop_fc_1: 0.0034s
test_bin_prop_fc_2: 0.0036s
test_bin_prop_fc_3: 0.0031s
test_bin_prop_fc_4: 0.0031s
test_prop_fc_0: 0.0016s
test_prop_fc_1: 0.6045s
test_prop_fc_2: 1.2859s
test_prop_fc_3: 0.0030s
test_prop_fc_4: 1.3424s
test_prop_GAC_0: 0.0014s
test_prop_GAC_1: 0.0031s
test_prop_GAC_2: 0.0062s
test_prop_GAC_3: 0.0025s
test_prop_GAC_4: 0.0034s
test_prop_GAC_5: 0.0420s
test_prop_GAC_6: 0.2225s
test_prop_GAC_7: 0.0486s
test_prop_GAC_8: 1.1438s
test_prop_GAC_9: 0.8951s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.5/0.5

TOTAL: 2.75/2.75
Code quality: ?/0.25

Running time: 2024_02_05-20:13:47

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : Encoded incorrect number of constraints for board: (3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : Encoded incorrect number of constraints for board: (4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : Encoded incorrect number of constraints for board: (5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : Encoded incorrect number of constraints for board: (6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 5.761s

FAILED (failures=4)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0009s
test_bne_grid_2: 0.0004s
test_bne_grid_3: 0.0034s
test_bne_grid_4: 0.0065s
test_bne_grid_5: 0.0184s
test_cages_1: 0.0002s
test_cages_2: 0.0003s
test_cages_3: 0.0002s
test_cages_4: 0.0012s
test_cages_5: 0.0009s
test_cages_6: 0.0009s
test_nary_grid_1: 0.0012s
test_nary_grid_2: 0.0045s
test_nary_grid_3: 0.0236s
test_nary_grid_4: 0.2563s
test_bin_prop_fc_0: 0.0009s
test_bin_prop_fc_1: 0.0030s
test_bin_prop_fc_2: 0.0065s
test_bin_prop_fc_3: 0.0046s
test_bin_prop_fc_4: 0.0035s
test_prop_fc_0: 0.0014s
test_prop_fc_1: 0.6416s
test_prop_fc_2: 1.3219s
test_prop_fc_3: 0.0021s
test_prop_fc_4: 1.1175s
test_prop_GAC_0: 0.0008s
test_prop_GAC_1: 0.0019s
test_prop_GAC_2: 0.0034s
test_prop_GAC_3: 0.0023s
test_prop_GAC_4: 0.0040s
test_prop_GAC_5: 0.0451s
test_prop_GAC_6: 0.2081s
test_prop_GAC_7: 0.0479s
test_prop_GAC_8: 1.0816s
test_prop_GAC_9: 0.9253s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.0/0.25
CAGEY: 0.5/0.5

TOTAL: 2.5/2.75
Code quality: ?/0.25

Running time: 2024_02_05-20:15:00

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

----------------------------------------------------------------------
Ran 44 tests in 5.488s

OK
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0007s
test_bne_grid_2: 0.0005s
test_bne_grid_3: 0.0029s
test_bne_grid_4: 0.0069s
test_bne_grid_5: 0.0194s
test_cages_1: 0.0002s
test_cages_2: 0.0002s
test_cages_3: 0.0002s
test_cages_4: 0.0011s
test_cages_5: 0.0010s
test_cages_6: 0.0012s
test_nary_grid_1: 0.0003s
test_nary_grid_2: 0.0020s
test_nary_grid_3: 0.0076s
test_nary_grid_4: 0.0524s
test_bin_prop_fc_0: 0.0010s
test_bin_prop_fc_1: 0.0031s
test_bin_prop_fc_2: 0.0029s
test_bin_prop_fc_3: 0.0051s
test_bin_prop_fc_4: 0.0053s
test_prop_fc_0: 0.0014s
test_prop_fc_1: 0.6881s
test_prop_fc_2: 1.1756s
test_prop_fc_3: 0.0017s
test_prop_fc_4: 0.9981s
test_prop_GAC_0: 0.0006s
test_prop_GAC_1: 0.0019s
test_prop_GAC_2: 0.0032s
test_prop_GAC_3: 0.0019s
test_prop_GAC_4: 0.0031s
test_prop_GAC_5: 0.0401s
test_prop_GAC_6: 0.2470s
test_prop_GAC_7: 0.0492s
test_prop_GAC_8: 1.1939s
test_prop_GAC_9: 0.9528s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.5/0.5

TOTAL: 2.75/2.75
Code quality: ?/0.25

Running time: 2024_02_05-20:15:20

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

----------------------------------------------------------------------
Ran 44 tests in 5.501s

OK
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0007s
test_bne_grid_2: 0.0006s
test_bne_grid_3: 0.0031s
test_bne_grid_4: 0.0116s
test_bne_grid_5: 0.0201s
test_cages_1: 0.0002s
test_cages_2: 0.0001s
test_cages_3: 0.0002s
test_cages_4: 0.0011s
test_cages_5: 0.0008s
test_cages_6: 0.0010s
test_nary_grid_1: 0.0003s
test_nary_grid_2: 0.0015s
test_nary_grid_3: 0.0070s
test_nary_grid_4: 0.0517s
test_bin_prop_fc_0: 0.0008s
test_bin_prop_fc_1: 0.0028s
test_bin_prop_fc_2: 0.0040s
test_bin_prop_fc_3: 0.0040s
test_bin_prop_fc_4: 0.0031s
test_prop_fc_0: 0.0014s
test_prop_fc_1: 0.6941s
test_prop_fc_2: 1.1844s
test_prop_fc_3: 0.0017s
test_prop_fc_4: 1.1197s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0019s
test_prop_GAC_2: 0.0032s
test_prop_GAC_3: 0.0021s
test_prop_GAC_4: 0.0031s
test_prop_GAC_5: 0.0397s
test_prop_GAC_6: 0.2749s
test_prop_GAC_7: 0.0534s
test_prop_GAC_8: 1.1648s
test_prop_GAC_9: 0.8251s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.5/0.5

TOTAL: 2.75/2.75
Code quality: ?/0.25

Running time: 2024_02_05-20:15:42

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

----------------------------------------------------------------------
Ran 44 tests in 5.449s

OK
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0009s
test_bne_grid_2: 0.0005s
test_bne_grid_3: 0.0031s
test_bne_grid_4: 0.0068s
test_bne_grid_5: 0.0194s
test_cages_1: 0.0002s
test_cages_2: 0.0002s
test_cages_3: 0.0002s
test_cages_4: 0.0011s
test_cages_5: 0.0009s
test_cages_6: 0.0010s
test_nary_grid_1: 0.0003s
test_nary_grid_2: 0.0010s
test_nary_grid_3: 0.0076s
test_nary_grid_4: 0.0559s
test_bin_prop_fc_0: 0.0010s
test_bin_prop_fc_1: 0.0033s
test_bin_prop_fc_2: 0.0036s
test_bin_prop_fc_3: 0.0041s
test_bin_prop_fc_4: 0.0044s
test_prop_fc_0: 0.0018s
test_prop_fc_1: 0.6668s
test_prop_fc_2: 1.1743s
test_prop_fc_3: 0.0030s
test_prop_fc_4: 1.1064s
test_prop_GAC_0: 0.0007s
test_prop_GAC_1: 0.0020s
test_prop_GAC_2: 0.0034s
test_prop_GAC_3: 0.0028s
test_prop_GAC_4: 0.0038s
test_prop_GAC_5: 0.0394s
test_prop_GAC_6: 0.1995s
test_prop_GAC_7: 0.0488s
test_prop_GAC_8: 1.2042s
test_prop_GAC_9: 0.8603s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.5/0.5

TOTAL: 2.75/2.75
Code quality: ?/0.25

Running time: 2024_02_05-20:21:35

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_2 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_3 (__main__.TestNaryGrid) ... FAIL
test_nary_grid_4 (__main__.TestNaryGrid) ... FAIL
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

======================================================================
FAIL: test_nary_grid_1 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "local variable 'all_tuples' referenced before assignment". Failed to construct board!
(3, [(2, [(1, 1), (1, 2)], '-'), (2, [(1, 3)], '?'), (2, [(2, 1), (3, 1)], '/'), (3, [(2, 2), (2, 3)], '/'), (1, [(3, 2), (3, 3)], '-')])


======================================================================
FAIL: test_nary_grid_2 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "local variable 'all_tuples' referenced before assignment". Failed to construct board!
(4, [(2, [(1, 1), (1, 2)], '/'), (7, [(1, 3), (2, 3)], '+'), (4, [(1, 4)], '?'), (1, [(2, 1), (2, 2)], '-'), (3, [(2, 2), (3, 2)], '-'), (2, [(2, 4), (3, 4)], '-'), (4, [(3, 3), (4, 3), (4, 4)], '*'), (1, [(4, 1), (4, 2)], '-')])


======================================================================
FAIL: test_nary_grid_3 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "local variable 'all_tuples' referenced before assignment". Failed to construct board!
(5, [(2, [(1, 1), (2, 1)], '/'), (1, [(1, 2), (2, 2)], '-'), (2, [(1, 3), (2, 3)], '-'), (4, [(1, 4), (1, 5)], '-'), (6, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (3, 2)], '-'), (3, [(3, 3), (4, 3)], '-'), (2, [(3, 4), (4, 4)], '/'), (3, [(3, 5), (4, 5)], '-'), (8, [(4, 1), (4, 2)], '+'), (7, [(5, 1), (5, 2), (5, 3)], '+'), (2, [(5, 4), (5, 5)], '-')])


======================================================================
FAIL: test_nary_grid_4 (__main__.TestNaryGrid)
----------------------------------------------------------------------
AssertionError: False is not true : 

Student code threw exception "local variable 'all_tuples' referenced before assignment". Failed to construct board!
(6, [(2, [(1, 1), (1, 2)], '-'), (3, [(1, 3), (2, 3)], '-'), (5, [(1, 4), (1, 5)], '-'), (1, [(1, 6), (2, 6)], '-'), (2, [(2, 1), (2, 2)], '-'), (10, [(2, 4), (2, 5)], '*'), (2, [(3, 1), (4, 1)], '-'), (2, [(3, 2), (4, 2)], '/'), (30, [(3, 3), (3, 4)], '*'), (3, [(3, 5), (3, 6)], '-'), (6, [(4, 3), (4, 4)], '*'), (6, [(4, 4), (4, 5)], '+'), (6, [(5, 1), (5, 2)], '+'), (2, [(5, 3), (6, 3)], '/'), (2, [(5, 4), (5, 5)], '-'), (1, [(5, 6), (6, 6)], '-'), (3, [(6, 1), (6, 2)], '+'), (7, [(6, 4), (6, 5)], '+')])


----------------------------------------------------------------------
Ran 44 tests in 5.651s

FAILED (failures=4)
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0011s
test_bne_grid_2: 0.0011s
test_bne_grid_3: 0.0036s
test_bne_grid_4: 0.0102s
test_bne_grid_5: 0.0432s
test_cages_1: 0.0003s
test_cages_2: 0.0004s
test_cages_3: 0.0004s
test_cages_4: 0.0041s
test_cages_5: 0.0058s
test_cages_6: 0.0025s
test_bin_prop_fc_0: 0.0009s
test_bin_prop_fc_1: 0.0045s
test_bin_prop_fc_2: 0.0105s
test_bin_prop_fc_3: 0.0035s
test_bin_prop_fc_4: 0.0054s
test_prop_fc_0: 0.0016s
test_prop_fc_1: 0.6479s
test_prop_fc_2: 1.3513s
test_prop_fc_3: 0.0029s
test_prop_fc_4: 1.1188s
test_prop_GAC_0: 0.0009s
test_prop_GAC_1: 0.0030s
test_prop_GAC_2: 0.0053s
test_prop_GAC_3: 0.0051s
test_prop_GAC_4: 0.0055s
test_prop_GAC_5: 0.0616s
test_prop_GAC_6: 0.2033s
test_prop_GAC_7: 0.0530s
test_prop_GAC_8: 1.1271s
test_prop_GAC_9: 0.9280s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.0/0.25
CAGEY: 0.5/0.5

TOTAL: 2.5/2.75
Code quality: ?/0.25

Running time: 2024_02_05-20:21:56

===========================================
test_bne_grid_1 (__main__.TestBinaryGrid) ... ok
test_bne_grid_2 (__main__.TestBinaryGrid) ... ok
test_bne_grid_3 (__main__.TestBinaryGrid) ... ok
test_bne_grid_4 (__main__.TestBinaryGrid) ... ok
test_bne_grid_5 (__main__.TestBinaryGrid) ... ok
test_cage_existence (__main__.TestCageConstraints) ... ok
test_cages_1 (__main__.TestCageConstraints) ... ok
test_cages_2 (__main__.TestCageConstraints) ... ok
test_cages_3 (__main__.TestCageConstraints) ... ok
test_cages_4 (__main__.TestCageConstraints) ... ok
test_cages_5 (__main__.TestCageConstraints) ... ok
test_cages_6 (__main__.TestCageConstraints) ... ok
test_dh_1 (__main__.TestDH) ... ok
test_dh_2 (__main__.TestDH) ... ok
test_dh_3 (__main__.TestDH) ... ok
test_dh_4 (__main__.TestDH) ... ok
test_mrv_1 (__main__.TestMRV) ... ok
test_mrv_2 (__main__.TestMRV) ... ok
test_mrv_3 (__main__.TestMRV) ... ok
test_mrv_4 (__main__.TestMRV) ... ok
test_nary_grid_1 (__main__.TestNaryGrid) ... ok
test_nary_grid_2 (__main__.TestNaryGrid) ... ok
test_nary_grid_3 (__main__.TestNaryGrid) ... ok
test_nary_grid_4 (__main__.TestNaryGrid) ... ok
test_bin_prop_fc_0 (__main__.TestPropFC) ... ok
test_bin_prop_fc_1 (__main__.TestPropFC) ... ok
test_bin_prop_fc_2 (__main__.TestPropFC) ... ok
test_bin_prop_fc_3 (__main__.TestPropFC) ... ok
test_bin_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_fc_0 (__main__.TestPropFC) ... ok
test_prop_fc_1 (__main__.TestPropFC) ... ok
test_prop_fc_2 (__main__.TestPropFC) ... ok
test_prop_fc_3 (__main__.TestPropFC) ... ok
test_prop_fc_4 (__main__.TestPropFC) ... ok
test_prop_GAC_0 (__main__.TestPropGAC) ... ok
test_prop_GAC_1 (__main__.TestPropGAC) ... ok
test_prop_GAC_2 (__main__.TestPropGAC) ... ok
test_prop_GAC_3 (__main__.TestPropGAC) ... ok
test_prop_GAC_4 (__main__.TestPropGAC) ... ok
test_prop_GAC_5 (__main__.TestPropGAC) ... ok
test_prop_GAC_6 (__main__.TestPropGAC) ... ok
test_prop_GAC_7 (__main__.TestPropGAC) ... ok
test_prop_GAC_8 (__main__.TestPropGAC) ... ok
test_prop_GAC_9 (__main__.TestPropGAC) ... ok

----------------------------------------------------------------------
Ran 44 tests in 5.773s

OK
----------------------------------------------------------------------
Time spent:

test_bne_grid_1: 0.0011s
test_bne_grid_2: 0.0011s
test_bne_grid_3: 0.0044s
test_bne_grid_4: 0.0088s
test_bne_grid_5: 0.0213s
test_cages_1: 0.0002s
test_cages_2: 0.0001s
test_cages_3: 0.0002s
test_cages_4: 0.0011s
test_cages_5: 0.0009s
test_cages_6: 0.0009s
test_nary_grid_1: 0.0003s
test_nary_grid_2: 0.0011s
test_nary_grid_3: 0.0061s
test_nary_grid_4: 0.0651s
test_bin_prop_fc_0: 0.0012s
test_bin_prop_fc_1: 0.0050s
test_bin_prop_fc_2: 0.0048s
test_bin_prop_fc_3: 0.0047s
test_bin_prop_fc_4: 0.0038s
test_prop_fc_0: 0.0018s
test_prop_fc_1: 0.7053s
test_prop_fc_2: 1.2071s
test_prop_fc_3: 0.0016s
test_prop_fc_4: 1.2505s
test_prop_GAC_0: 0.0008s
test_prop_GAC_1: 0.0023s
test_prop_GAC_2: 0.0041s
test_prop_GAC_3: 0.0026s
test_prop_GAC_4: 0.0043s
test_prop_GAC_5: 0.0372s
test_prop_GAC_6: 0.2287s
test_prop_GAC_7: 0.0603s
test_prop_GAC_8: 1.1719s
test_prop_GAC_9: 0.9338s
----------------------------------------------------------------------
Grades:

FC: 0.5/0.5
GAC: 0.75/0.75
MRV: 0.25/0.25
DH: 0.25/0.25
BINARY: 0.25/0.25
NARY: 0.25/0.25
CAGEY: 0.5/0.5

TOTAL: 2.75/2.75
Code quality: ?/0.25

Running time: 2024_02_05-20:22:12

===========================================
